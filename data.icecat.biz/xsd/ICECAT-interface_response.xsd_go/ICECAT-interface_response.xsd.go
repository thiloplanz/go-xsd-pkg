//	Auto-generated by the "go-xsd" package located at:
//		github.com/metaleap/go-xsd
//	Comments on types and fields (if any) are from the XSD file located at:
//		data.icecat.biz/xsd/ICECAT-interface_response.xsd
package go_IcecatInterfaceResponse

import (
	xsdt "github.com/metaleap/go-xsd/types"
)

type XsdGoPkgHasAttr_Number_XsdtString_ struct {
	Number xsdt.String `xml:"Number,attr"`
}

type XsdGoPkgHasAttr_Level_XsdtString_ struct {
	Level xsdt.String `xml:"Level,attr"`
}

type XsdGoPkgHasAttr_Text_XsdtString_ struct {
	Text xsdt.String `xml:"Text,attr"`
}

type XsdGoPkgHasAttr_Count_XsdtString_ struct {
	Count xsdt.String `xml:"Count,attr"`
}

type TxsdBodySequenceLine struct {
	XsdGoPkgHasAttr_Count_XsdtString_

	XsdGoPkgHasAttr_Number_XsdtString_

	XsdGoPkgHasAttr_Level_XsdtString_

	XsdGoPkgHasAttr_Text_XsdtString_
}

//	If the WalkHandlers.TxsdBodySequenceLine function is not nil (ie. was set by outside code), calls it with this TxsdBodySequenceLine instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TxsdBodySequenceLine instance.
func (me *TxsdBodySequenceLine) Walk() (err error) {
	if fn := WalkHandlers.TxsdBodySequenceLine; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_ struct {
	Lines []*TxsdBodySequenceLine `xml:"Line"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_ instance.
func (me *XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Lines {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TBody struct {
	XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_
}

//	If the WalkHandlers.TBody function is not nil (ie. was set by outside code), calls it with this TBody instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TBody instance.
func (me *TBody) Walk() (err error) {
	if fn := WalkHandlers.TBody; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_ struct {
	Bodies []*TBody `xml:"Body"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_ instance.
func (me *XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Bodies {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Date_XsdtString_ struct {
	Date xsdt.String `xml:"Date,attr"`
}

type XsdGoPkgHasAttr_Code_XsdtInteger_ struct {
	Code xsdt.Integer `xml:"Code,attr"`
}

type XsdGoPkgHasAttr_Period_XsdtString_ struct {
	Period xsdt.String `xml:"Period,attr"`
}

type XsdGoPkgHasAttr_StatisticQueryDateId_XsdtInteger_ struct {
	StatisticQueryDateId xsdt.Integer `xml:"StatisticQueryDate_ID,attr"`
}

type TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport struct {
	XsdGoPkgHasAttr_StatisticQueryDateId_XsdtInteger_

	XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_

	XsdGoPkgHasAttr_Date_XsdtString_

	XsdGoPkgHasAttr_Code_XsdtInteger_

	XsdGoPkgHasAttr_Period_XsdtString_
}

//	If the WalkHandlers.TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport function is not nil (ie. was set by outside code), calls it with this TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport instance.
func (me *TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport) Walk() (err error) {
	if fn := WalkHandlers.TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_ struct {
	StatisticQueryDateDataReports []*TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport `xml:"StatisticQueryDateDataReport"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_ instance.
func (me *XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.StatisticQueryDateDataReports {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TStatisticQueryDateDataReportResponse struct {
	XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_
}

//	If the WalkHandlers.TStatisticQueryDateDataReportResponse function is not nil (ie. was set by outside code), calls it with this TStatisticQueryDateDataReportResponse instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TStatisticQueryDateDataReportResponse instance.
func (me *TStatisticQueryDateDataReportResponse) Walk() (err error) {
	if fn := WalkHandlers.TStatisticQueryDateDataReportResponse; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_ struct {
	StatisticQueryDateDataReportResponse *TStatisticQueryDateDataReportResponse `xml:"StatisticQueryDateDataReportResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_ instance.
func (me *XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.StatisticQueryDateDataReportResponse.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasCdata struct {
	XsdGoPkgCDATA string `xml:",chardata"`
}

//	If the WalkHandlers.XsdGoPkgHasCdata function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasCdata instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasCdata instance.
func (me *XsdGoPkgHasCdata) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasCdata; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Id_XsdtInteger_ struct {
	Id xsdt.Integer `xml:"ID,attr"`
}

type XsdGoPkgHasAttr_Langid_XsdtInteger_ struct {
	Langid xsdt.Integer `xml:"langid,attr"`
}

type XsdGoPkgHasAttr_Value_XsdtString_ struct {
	Value xsdt.String `xml:"Value,attr"`
}

type TName struct {
	XsdGoPkgHasCdata

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_Value_XsdtString_
}

//	If the WalkHandlers.TName function is not nil (ie. was set by outside code), calls it with this TName instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TName instance.
func (me *TName) Walk() (err error) {
	if fn := WalkHandlers.TName; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasCdata.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_ struct {
	Names []*TName `xml:"Name"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_ instance.
func (me *XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Names {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Sid_XsdtInteger_ struct {
	Sid xsdt.Integer `xml:"sid,attr"`
}

type TFeatureGroup struct {
	XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Sid_XsdtInteger_
}

//	If the WalkHandlers.TFeatureGroup function is not nil (ie. was set by outside code), calls it with this TFeatureGroup instance as the single argument. Then calls the Walk() method on 1/3 embed(s) and 0/0 field(s) belonging to this TFeatureGroup instance.
func (me *TFeatureGroup) Walk() (err error) {
	if fn := WalkHandlers.TFeatureGroup; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_ struct {
	FeatureGroups []*TFeatureGroup `xml:"FeatureGroup"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_ instance.
func (me *XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureGroups {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFeatureGroupsList struct {
	XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_
}

//	If the WalkHandlers.TFeatureGroupsList function is not nil (ie. was set by outside code), calls it with this TFeatureGroupsList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TFeatureGroupsList instance.
func (me *TFeatureGroupsList) Walk() (err error) {
	if fn := WalkHandlers.TFeatureGroupsList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_ struct {
	FeatureGroupsList *TFeatureGroupsList `xml:"FeatureGroupsList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_ instance.
func (me *XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureGroupsList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_BrandEndOfSaleDate_XsdtString_ struct {
	BrandEndOfSaleDate xsdt.String `xml:"BrandEndOfSaleDate,attr"`
}

type XsdGoPkgHasAttr_ProductsDescription_XsdtString_ struct {
	ProductsDescription xsdt.String `xml:"ProductsDescription,attr"`
}

type XsdGoPkgHasAttr_Pic500X500Width_XsdtInteger_ struct {
	Pic500X500Width xsdt.Integer `xml:"Pic500x500Width,attr"`
}

type XsdGoPkgHasAttr_Class_XsdtString_ struct {
	Class xsdt.String `xml:"Class,attr"`
}

type XsdGoPkgHasAttr_Id_XsdtInt_ struct {
	Id xsdt.Int `xml:"ID,attr"`
}

type XsdGoPkgHasAttr_No_XsdtInt_ struct {
	No xsdt.Int `xml:"No,attr"`
}

type XsdGoPkgHasAttr_Title_XsdtString_ struct {
	Title xsdt.String `xml:"Title,attr"`
}

type XsdGoPkgHasAttr_Langid_XsdtInt_ struct {
	Langid xsdt.Int `xml:"langid,attr"`
}

type XsdGoPkgHasAttr_HighPic_XsdtString_ struct {
	HighPic xsdt.String `xml:"HighPic,attr"`
}

type XsdGoPkgHasAttr_HighPicSize_XsdtInt_ struct {
	HighPicSize xsdt.Int `xml:"HighPicSize,attr"`
}

type TProductBullet struct {
	XsdGoPkgHasAttr_HighPic_XsdtString_

	XsdGoPkgHasAttr_HighPicSize_XsdtInt_

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Id_XsdtInt_

	XsdGoPkgHasAttr_Value_XsdtString_

	XsdGoPkgHasAttr_No_XsdtInt_

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAttr_Langid_XsdtInt_
}

//	If the WalkHandlers.TProductBullet function is not nil (ie. was set by outside code), calls it with this TProductBullet instance as the single argument. Then calls the Walk() method on 0/8 embed(s) and 0/0 field(s) belonging to this TProductBullet instance.
func (me *TProductBullet) Walk() (err error) {
	if fn := WalkHandlers.TProductBullet; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_ struct {
	ProductBullets []*TProductBullet `xml:"ProductBullet"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_ instance.
func (me *XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductBullets {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductBulletGroup struct {
	XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_

	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Value_XsdtString_

	XsdGoPkgHasAttr_Langid_XsdtInt_
}

//	If the WalkHandlers.TProductBulletGroup function is not nil (ie. was set by outside code), calls it with this TProductBulletGroup instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TProductBulletGroup instance.
func (me *TProductBulletGroup) Walk() (err error) {
	if fn := WalkHandlers.TProductBulletGroup; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_ struct {
	ProductBulletGroups []*TProductBulletGroup `xml:"ProductBulletGroup"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_ instance.
func (me *XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductBulletGroups {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductBullets struct {
	XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_
}

//	If the WalkHandlers.TProductBullets function is not nil (ie. was set by outside code), calls it with this TProductBullets instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TProductBullets instance.
func (me *TProductBullets) Walk() (err error) {
	if fn := WalkHandlers.TProductBullets; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_ struct {
	ProductBullets *TProductBullets `xml:"ProductBullets"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_ instance.
func (me *XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductBullets.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Description_XsdtString_ struct {
	Description xsdt.String `xml:"Description,attr"`
}

type XsdGoPkgHasAttr_Keywords_XsdtString_ struct {
	Keywords xsdt.String `xml:"Keywords,attr"`
}

type Tseo struct {
	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_Description_XsdtString_

	XsdGoPkgHasAttr_Keywords_XsdtString_

	XsdGoPkgHasAttr_Title_XsdtString_
}

//	If the WalkHandlers.Tseo function is not nil (ie. was set by outside code), calls it with this Tseo instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this Tseo instance.
func (me *Tseo) Walk() (err error) {
	if fn := WalkHandlers.Tseo; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_ struct {
	Seos []*Tseo `xml:"SEO"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_ instance.
func (me *XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Seos {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TSEOs struct {
	XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_
}

//	If the WalkHandlers.TSEOs function is not nil (ie. was set by outside code), calls it with this TSEOs instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TSEOs instance.
func (me *TSEOs) Walk() (err error) {
	if fn := WalkHandlers.TSEOs; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_ struct {
	SEOs *TSEOs `xml:"SEOs"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_ instance.
func (me *XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.SEOs.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TSummaryDescriptionAttr struct {
	XsdGoPkgHasCdata

	XsdGoPkgHasAttr_Langid_XsdtInteger_
}

//	If the WalkHandlers.TSummaryDescriptionAttr function is not nil (ie. was set by outside code), calls it with this TSummaryDescriptionAttr instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TSummaryDescriptionAttr instance.
func (me *TSummaryDescriptionAttr) Walk() (err error) {
	if fn := WalkHandlers.TSummaryDescriptionAttr; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasCdata.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_ struct {
	ShortSummaryDescription *TSummaryDescriptionAttr `xml:"ShortSummaryDescription"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_ instance.
func (me *XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ShortSummaryDescription.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_ struct {
	LongSummaryDescription *TSummaryDescriptionAttr `xml:"LongSummaryDescription"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_ instance.
func (me *XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.LongSummaryDescription.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TSummaryDescription struct {
	XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_

	XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_
}

//	If the WalkHandlers.TSummaryDescription function is not nil (ie. was set by outside code), calls it with this TSummaryDescription instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TSummaryDescription instance.
func (me *TSummaryDescription) Walk() (err error) {
	if fn := WalkHandlers.TSummaryDescription; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_ struct {
	SummaryDescriptions []*TSummaryDescription `xml:"SummaryDescription"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_ instance.
func (me *XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.SummaryDescriptions {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_AddressDetails_XsdtString_ struct {
	AddressDetails xsdt.String `xml:"AddressDetails,attr"`
}

type XsdGoPkgHasAttr_Website_XsdtString_ struct {
	Website xsdt.String `xml:"Website,attr"`
}

type XsdGoPkgHasAttr_CountryId_XsdtInteger_ struct {
	CountryId xsdt.Integer `xml:"Country_ID,attr"`
}

type XsdGoPkgHasAttr_CountryCode_XsdtString_ struct {
	CountryCode xsdt.String `xml:"Country_Code,attr"`
}

type XsdGoPkgHasAttr_Country_XsdtString_ struct {
	Country xsdt.String `xml:"Country,attr"`
}

type XsdGoPkgHasAttr_Phone_XsdtString_ struct {
	Phone xsdt.String `xml:"Phone,attr"`
}

type TCustomerService struct {
	XsdGoPkgHasAttr_AddressDetails_XsdtString_

	XsdGoPkgHasAttr_Website_XsdtString_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_CountryId_XsdtInteger_

	XsdGoPkgHasAttr_CountryCode_XsdtString_

	XsdGoPkgHasAttr_Country_XsdtString_

	XsdGoPkgHasAttr_Phone_XsdtString_
}

//	If the WalkHandlers.TCustomerService function is not nil (ie. was set by outside code), calls it with this TCustomerService instance as the single argument. Then calls the Walk() method on 0/7 embed(s) and 0/0 field(s) belonging to this TCustomerService instance.
func (me *TCustomerService) Walk() (err error) {
	if fn := WalkHandlers.TCustomerService; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_ struct {
	CustomerServices []*TCustomerService `xml:"CustomerService"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_ instance.
func (me *XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.CustomerServices {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Name_XsdtString_ struct {
	Name xsdt.String `xml:"Name,attr"`
}

type XsdGoPkgHasAttr_LogoPic_XsdtAnyURI_ struct {
	LogoPic xsdt.AnyURI `xml:"LogoPic,attr"`
}

type XsdGoPkgHasAttr_Sponsor_XsdtString_ struct {
	Sponsor xsdt.String `xml:"Sponsor,attr"`
}

type TSupplier struct {
	XsdGoPkgHasAttr_Sponsor_XsdtString_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_

	XsdGoPkgHasAttr_Name_XsdtString_

	XsdGoPkgHasAttr_LogoPic_XsdtAnyURI_
}

//	If the WalkHandlers.TSupplier function is not nil (ie. was set by outside code), calls it with this TSupplier instance as the single argument. Then calls the Walk() method on 1/5 embed(s) and 0/0 field(s) belonging to this TSupplier instance.
func (me *TSupplier) Walk() (err error) {
	if fn := WalkHandlers.TSupplier; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_ struct {
	Supplier *TSupplier `xml:"Supplier"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_ instance.
func (me *XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Supplier.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_HighPicSize_XsdtInteger_ struct {
	HighPicSize xsdt.Integer `xml:"HighPicSize,attr"`
}

type XsdGoPkgHasAttr_LongDesc_XsdtString_ struct {
	LongDesc xsdt.String `xml:"LongDesc,attr"`
}

type XsdGoPkgHasAttr_PDFSize_XsdtInteger_ struct {
	PDFSize xsdt.Integer `xml:"PDFSize,attr"`
}

type XsdGoPkgHasAttr_ManualPDFSize_XsdtInteger_ struct {
	ManualPDFSize xsdt.Integer `xml:"ManualPDFSize,attr"`
}

type XsdGoPkgHasAttr_ShortDesc_XsdtString_ struct {
	ShortDesc xsdt.String `xml:"ShortDesc,attr"`
}

type XsdGoPkgHasAttr_Url_XsdtAnyURI_ struct {
	Url xsdt.AnyURI `xml:"URL,attr"`
}

type XsdGoPkgHasAttr_Pdfurl_XsdtAnyURI_ struct {
	Pdfurl xsdt.AnyURI `xml:"PDFURL,attr"`
}

type XsdGoPkgHasAttr_ManualPDFURL_XsdtAnyURI_ struct {
	ManualPDFURL xsdt.AnyURI `xml:"ManualPDFURL,attr"`
}

type XsdGoPkgHasAttr_MiddleDesc_XsdtString_ struct {
	MiddleDesc xsdt.String `xml:"MiddleDesc,attr"`
}

type XsdGoPkgHasAttr_WarrantyInfo_XsdtString_ struct {
	WarrantyInfo xsdt.String `xml:"WarrantyInfo,attr"`
}

type TProductDescription struct {
	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Pdfurl_XsdtAnyURI_

	XsdGoPkgHasAttr_ManualPDFURL_XsdtAnyURI_

	XsdGoPkgHasAttr_MiddleDesc_XsdtString_

	XsdGoPkgHasAttr_WarrantyInfo_XsdtString_

	XsdGoPkgHasAttr_LongDesc_XsdtString_

	XsdGoPkgHasAttr_PDFSize_XsdtInteger_

	XsdGoPkgHasAttr_ManualPDFSize_XsdtInteger_

	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_ShortDesc_XsdtString_
}

//	If the WalkHandlers.TProductDescription function is not nil (ie. was set by outside code), calls it with this TProductDescription instance as the single argument. Then calls the Walk() method on 0/11 embed(s) and 0/0 field(s) belonging to this TProductDescription instance.
func (me *TProductDescription) Walk() (err error) {
	if fn := WalkHandlers.TProductDescription; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_ struct {
	ProductDescriptions []*TProductDescription `xml:"ProductDescription"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_ instance.
func (me *XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductDescriptions {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TDisclaimer struct {
	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_Value_XsdtString_
}

//	If the WalkHandlers.TDisclaimer function is not nil (ie. was set by outside code), calls it with this TDisclaimer instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TDisclaimer instance.
func (me *TDisclaimer) Walk() (err error) {
	if fn := WalkHandlers.TDisclaimer; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_ struct {
	Disclaimers []*TDisclaimer `xml:"Disclaimer"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_ instance.
func (me *XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Disclaimers {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TDisclaimers struct {
	XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_
}

//	If the WalkHandlers.TDisclaimers function is not nil (ie. was set by outside code), calls it with this TDisclaimers instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TDisclaimers instance.
func (me *TDisclaimers) Walk() (err error) {
	if fn := WalkHandlers.TDisclaimers; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_ struct {
	Disclaimers *TDisclaimers `xml:"Disclaimers"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_ instance.
func (me *XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Disclaimers.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_ProdId_XsdtString_ struct {
	ProdId xsdt.String `xml:"Prod_id,attr"`
}

type XsdGoPkgHasAttr_ThumbPic_XsdtAnyURI_ struct {
	ThumbPic xsdt.AnyURI `xml:"ThumbPic,attr"`
}

type XsdGoPkgHasAttr_LowPic_XsdtAnyURI_ struct {
	LowPic xsdt.AnyURI `xml:"LowPic,attr"`
}

type XsdGoPkgHasAttr_Relevance_XsdtInteger_ struct {
	Relevance xsdt.Integer `xml:"Relevance,attr"`
}

type XsdGoPkgHasAttr_Quality_XsdtString_ struct {
	Quality xsdt.String `xml:"Quality,attr"`
}

type XsdGoPkgHasAttr_LowPicSize_XsdtInteger_ struct {
	LowPicSize xsdt.Integer `xml:"LowPicSize,attr"`
}

type XsdGoPkgHasAttr_ErrorMessage_XsdtString_ struct {
	ErrorMessage xsdt.String `xml:"ErrorMessage,attr"`
}

type XsdGoPkgHasAttr_ReleaseDate_XsdtString_ struct {
	ReleaseDate xsdt.String `xml:"ReleaseDate,attr"`
}

type XsdGoPkgHasAttr_ThumbPicSize_XsdtInteger_ struct {
	ThumbPicSize xsdt.Integer `xml:"ThumbPicSize,attr"`
}

type XsdGoPkgHasAttr_HighPic_XsdtAnyURI_ struct {
	HighPic xsdt.AnyURI `xml:"HighPic,attr"`
}

type XsdGoPkgHasAttr_Score_XsdtInteger_ struct {
	Score xsdt.Integer `xml:"Score,attr"`
}

type TProductRelated struct {
	XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_

	XsdGoPkgHasAttr_Name_XsdtString_

	XsdGoPkgHasAttr_LowPicSize_XsdtInteger_

	XsdGoPkgHasAttr_ErrorMessage_XsdtString_

	XsdGoPkgHasAttr_ReleaseDate_XsdtString_

	XsdGoPkgHasAttr_Code_XsdtInteger_

	XsdGoPkgHasAttr_ProductsDescription_XsdtString_

	XsdGoPkgHasAttr_Relevance_XsdtInteger_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Quality_XsdtString_

	XsdGoPkgHasAttr_HighPic_XsdtAnyURI_

	XsdGoPkgHasAttr_HighPicSize_XsdtInteger_

	XsdGoPkgHasAttr_ThumbPicSize_XsdtInteger_

	XsdGoPkgHasAttr_Score_XsdtInteger_

	XsdGoPkgHasAttr_ThumbPic_XsdtAnyURI_

	XsdGoPkgHasAttr_LowPic_XsdtAnyURI_

	XsdGoPkgHasAttr_ProdId_XsdtString_
}

//	If the WalkHandlers.TProductRelated function is not nil (ie. was set by outside code), calls it with this TProductRelated instance as the single argument. Then calls the Walk() method on 1/17 embed(s) and 0/0 field(s) belonging to this TProductRelated instance.
func (me *TProductRelated) Walk() (err error) {
	if fn := WalkHandlers.TProductRelated; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_ struct {
	ProductRelateds []*TProductRelated `xml:"ProductRelated"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_ instance.
func (me *XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductRelateds {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Source_XsdtAnyURI_ struct {
	Source xsdt.AnyURI `xml:"Source,attr"`
}

type XsdGoPkgHasAttr_Pic500X500Height_XsdtInteger_ struct {
	Pic500X500Height xsdt.Integer `xml:"Pic500x500Height,attr"`
}

type XsdGoPkgHasAttr_Original_XsdtAnyURI_ struct {
	Original xsdt.AnyURI `xml:"Original,attr"`
}

type XsdGoPkgHasAttr_BrandStartOfSaleDate_XsdtString_ struct {
	BrandStartOfSaleDate xsdt.String `xml:"BrandStartOfSaleDate,attr"`
}

type XsdGoPkgHasAttr_Ean_XsdtInteger_ struct {
	Ean xsdt.Integer `xml:"EAN,attr"`
}

type TEANCode struct {
	XsdGoPkgHasAttr_Ean_XsdtInteger_
}

//	If the WalkHandlers.TEANCode function is not nil (ie. was set by outside code), calls it with this TEANCode instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TEANCode instance.
func (me *TEANCode) Walk() (err error) {
	if fn := WalkHandlers.TEANCode; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_ struct {
	EANCodes []*TEANCode `xml:"EANCode"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_ instance.
func (me *XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.EANCodes {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Translated_XsdtBoolean_ struct {
	Translated xsdt.Boolean `xml:"Translated,attr"`
}

type XsdGoPkgHasAttr_PresentationValue_XsdtString_ struct {
	PresentationValue xsdt.String `xml:"Presentation_Value,attr"`
}

type TSign struct {
	XsdGoPkgHasCdata

	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_Value_XsdtString_

	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TSign function is not nil (ie. was set by outside code), calls it with this TSign instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TSign instance.
func (me *TSign) Walk() (err error) {
	if fn := WalkHandlers.TSign; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasCdata.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_ struct {
	Signs []*TSign `xml:"Sign"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_ instance.
func (me *XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Signs {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TSigns struct {
	XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_
}

//	If the WalkHandlers.TSigns function is not nil (ie. was set by outside code), calls it with this TSigns instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TSigns instance.
func (me *TSigns) Walk() (err error) {
	if fn := WalkHandlers.TSigns; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_ struct {
	Signs *TSigns `xml:"Signs"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_ instance.
func (me *XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Signs.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TNames struct {
	XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_
}

//	If the WalkHandlers.TNames function is not nil (ie. was set by outside code), calls it with this TNames instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TNames instance.
func (me *TNames) Walk() (err error) {
	if fn := WalkHandlers.TNames; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_ struct {
	Names *TNames `xml:"Names"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_ instance.
func (me *XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Names.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TDescription struct {
	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_Value_XsdtString_

	XsdGoPkgHasCdata
}

//	If the WalkHandlers.TDescription function is not nil (ie. was set by outside code), calls it with this TDescription instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TDescription instance.
func (me *TDescription) Walk() (err error) {
	if fn := WalkHandlers.TDescription; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasCdata.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_ struct {
	Descriptions []*TDescription `xml:"Description"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_ instance.
func (me *XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Descriptions {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TDescriptions struct {
	XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_
}

//	If the WalkHandlers.TDescriptions function is not nil (ie. was set by outside code), calls it with this TDescriptions instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TDescriptions instance.
func (me *TDescriptions) Walk() (err error) {
	if fn := WalkHandlers.TDescriptions; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_ struct {
	Descriptions *TDescriptions `xml:"Descriptions"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_ instance.
func (me *XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Descriptions.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Sign_XsdtString_ struct {
	Sign xsdt.String `xml:"Sign,attr"`
}

type XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_ struct {
	Sign xsdt.String `xml:"Sign"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_ instance.
func (me *XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TMeasure struct {
	XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_

	XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_

	XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_

	XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Sign_XsdtString_
}

//	If the WalkHandlers.TMeasure function is not nil (ie. was set by outside code), calls it with this TMeasure instance as the single argument. Then calls the Walk() method on 4/6 embed(s) and 0/0 field(s) belonging to this TMeasure instance.
func (me *TMeasure) Walk() (err error) {
	if fn := WalkHandlers.TMeasure; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_ struct {
	Measure *TMeasure `xml:"Measure"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_ instance.
func (me *XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Measure.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TLocalValue struct {
	XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_

	XsdGoPkgHasAttr_Value_XsdtString_
}

//	If the WalkHandlers.TLocalValue function is not nil (ie. was set by outside code), calls it with this TLocalValue instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TLocalValue instance.
func (me *TLocalValue) Walk() (err error) {
	if fn := WalkHandlers.TLocalValue; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_ struct {
	LocalValues []*TLocalValue `xml:"LocalValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_ instance.
func (me *XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.LocalValues {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Localized_XsdtBoolean_ struct {
	Localized xsdt.Boolean `xml:"Localized,attr"`
}

type XsdGoPkgHasAttr_LocalId_XsdtInteger_ struct {
	LocalId xsdt.Integer `xml:"Local_ID,attr"`
}

type XsdGoPkgHasAttr_Mandatory_XsdtBoolean_ struct {
	Mandatory xsdt.Boolean `xml:"Mandatory,attr"`
}

type XsdGoPkgHasAttr_LocalValue_XsdtString_ struct {
	LocalValue xsdt.String `xml:"Local_Value,attr"`
}

type XsdGoPkgHasAttr_Type_XsdtString_ struct {
	Type xsdt.String `xml:"Type,attr"`
}

type XsdGoPkgHasAttr_LimitDirection_XsdtInteger_ struct {
	LimitDirection xsdt.Integer `xml:"LimitDirection,attr"`
}

type XsdGoPkgHasAttr_Searchable_XsdtBoolean_ struct {
	Searchable xsdt.Boolean `xml:"Searchable,attr"`
}

type XsdGoPkgHasAttr_CategoryFeatureId_XsdtInteger_ struct {
	CategoryFeatureId xsdt.Integer `xml:"CategoryFeature_ID,attr"`
}

type XsdGoPkgHasAttr_Mandatory_XsdtInteger_ struct {
	Mandatory xsdt.Integer `xml:"Mandatory,attr"`
}

type XsdGoPkgHasAttr_ValueSorting_XsdtInteger_ struct {
	ValueSorting xsdt.Integer `xml:"ValueSorting,attr"`
}

type XsdGoPkgHasAttr_CategoryFeatureGroupId_XsdtInteger_ struct {
	CategoryFeatureGroupId xsdt.Integer `xml:"CategoryFeatureGroup_ID,attr"`
}

type TRestrictedValue struct {
	XsdGoPkgHasCdata
}

//	If the WalkHandlers.TRestrictedValue function is not nil (ie. was set by outside code), calls it with this TRestrictedValue instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TRestrictedValue instance.
func (me *TRestrictedValue) Walk() (err error) {
	if fn := WalkHandlers.TRestrictedValue; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasCdata.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_ struct {
	RestrictedValues []*TRestrictedValue `xml:"RestrictedValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_ instance.
func (me *XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.RestrictedValues {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_No_XsdtInteger_ struct {
	No xsdt.Integer `xml:"No,attr"`
}

type XsdGoPkgHasAttr_Class_XsdtBoolean_ struct {
	Class xsdt.Boolean `xml:"Class,attr"`
}

type TRestrictedValues struct {
	XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_

	XsdGoPkgHasAttr_ValueSorting_XsdtInteger_
}

//	If the WalkHandlers.TRestrictedValues function is not nil (ie. was set by outside code), calls it with this TRestrictedValues instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TRestrictedValues instance.
func (me *TRestrictedValues) Walk() (err error) {
	if fn := WalkHandlers.TRestrictedValues; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_ struct {
	RestrictedValues *TRestrictedValues `xml:"RestrictedValues"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_ instance.
func (me *XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.RestrictedValues.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_UseDropdownInput_XsdtString_ struct {
	UseDropdownInput xsdt.String `xml:"Use_Dropdown_Input,attr"`
}

type TFeature struct {
	XsdGoPkgHasAttr_LimitDirection_XsdtInteger_

	XsdGoPkgHasAttr_Searchable_XsdtBoolean_

	XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_

	XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Type_XsdtString_

	XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_

	XsdGoPkgHasAttr_CategoryFeatureId_XsdtInteger_

	XsdGoPkgHasAttr_CategoryFeatureGroupId_XsdtInteger_

	XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_

	XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_

	XsdGoPkgHasAttr_Mandatory_XsdtInteger_

	XsdGoPkgHasAttr_ValueSorting_XsdtInteger_

	XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_

	XsdGoPkgHasAttr_UseDropdownInput_XsdtString_

	XsdGoPkgHasAttr_No_XsdtInteger_

	XsdGoPkgHasAttr_Class_XsdtBoolean_
}

//	If the WalkHandlers.TFeature function is not nil (ie. was set by outside code), calls it with this TFeature instance as the single argument. Then calls the Walk() method on 6/17 embed(s) and 0/0 field(s) belonging to this TFeature instance.
func (me *TFeature) Walk() (err error) {
	if fn := WalkHandlers.TFeature; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_ struct {
	Features []*TFeature `xml:"Feature"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_ instance.
func (me *XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Features {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductFeature struct {
	XsdGoPkgHasAttr_Value_XsdtString_

	XsdGoPkgHasAttr_No_XsdtInteger_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Searchable_XsdtBoolean_

	XsdGoPkgHasAttr_CategoryFeatureGroupId_XsdtInteger_

	XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_

	XsdGoPkgHasAttr_Localized_XsdtBoolean_

	XsdGoPkgHasAttr_Translated_XsdtBoolean_

	XsdGoPkgHasAttr_PresentationValue_XsdtString_

	XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_

	XsdGoPkgHasAttr_CategoryFeatureId_XsdtInteger_

	XsdGoPkgHasAttr_LocalId_XsdtInteger_

	XsdGoPkgHasAttr_Mandatory_XsdtBoolean_

	XsdGoPkgHasAttr_LocalValue_XsdtString_
}

//	If the WalkHandlers.TProductFeature function is not nil (ie. was set by outside code), calls it with this TProductFeature instance as the single argument. Then calls the Walk() method on 2/14 embed(s) and 0/0 field(s) belonging to this TProductFeature instance.
func (me *TProductFeature) Walk() (err error) {
	if fn := WalkHandlers.TProductFeature; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_ struct {
	ProductFeatures []*TProductFeature `xml:"ProductFeature"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_ instance.
func (me *XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductFeatures {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_IsRich_XsdtInteger_ struct {
	IsRich xsdt.Integer `xml:"IsRich,attr"`
}

type XsdGoPkgHasAttr_PicWidth_XsdtInteger_ struct {
	PicWidth xsdt.Integer `xml:"PicWidth,attr"`
}

type XsdGoPkgHasAttr_ThumbSize_XsdtInteger_ struct {
	ThumbSize xsdt.Integer `xml:"ThumbSize,attr"`
}

type XsdGoPkgHasAttr_LowPicWidth_XsdtInteger_ struct {
	LowPicWidth xsdt.Integer `xml:"LowPicWidth,attr"`
}

type XsdGoPkgHasAttr_LowSize_XsdtInteger_ struct {
	LowSize xsdt.Integer `xml:"LowSize,attr"`
}

type XsdGoPkgHasAttr_Pic500X500Size_XsdtInteger_ struct {
	Pic500X500Size xsdt.Integer `xml:"Pic500x500Size,attr"`
}

type XsdGoPkgHasAttr_Logo_XsdtInteger_ struct {
	Logo xsdt.Integer `xml:"logo,attr"`
}

type XsdGoPkgHasAttr_PicHeight_XsdtInteger_ struct {
	PicHeight xsdt.Integer `xml:"PicHeight,attr"`
}

type XsdGoPkgHasAttr_Pic500X500_XsdtAnyURI_ struct {
	Pic500X500 xsdt.AnyURI `xml:"Pic500x500,attr"`
}

type XsdGoPkgHasAttr_LowPicHeight_XsdtInteger_ struct {
	LowPicHeight xsdt.Integer `xml:"LowPicHeight,attr"`
}

type XsdGoPkgHasAttr_Size_XsdtInteger_ struct {
	Size xsdt.Integer `xml:"Size,attr"`
}

type XsdGoPkgHasAttr_Pic_XsdtAnyURI_ struct {
	Pic xsdt.AnyURI `xml:"Pic,attr"`
}

type XsdGoPkgHasAttr_ProductPictureId_XsdtString_ struct {
	ProductPictureId xsdt.String `xml:"ProductPicture_ID,attr"`
}

type XsdGoPkgHasAttr_OriginalSize_XsdtInteger_ struct {
	OriginalSize xsdt.Integer `xml:"OriginalSize,attr"`
}

type XsdGoPkgHasAttr_IsMain_XsdtInteger_ struct {
	IsMain xsdt.Integer `xml:"IsMain,attr"`
}

type TxsdProductGallerySequenceProductPicture struct {
	XsdGoPkgHasAttr_LowPicHeight_XsdtInteger_

	XsdGoPkgHasAttr_Pic500X500Size_XsdtInteger_

	XsdGoPkgHasAttr_Logo_XsdtInteger_

	XsdGoPkgHasAttr_PicHeight_XsdtInteger_

	XsdGoPkgHasAttr_Pic500X500_XsdtAnyURI_

	XsdGoPkgHasAttr_LowPic_XsdtAnyURI_

	XsdGoPkgHasAttr_Pic500X500Height_XsdtInteger_

	XsdGoPkgHasAttr_ThumbPic_XsdtAnyURI_

	XsdGoPkgHasAttr_Size_XsdtInteger_

	XsdGoPkgHasAttr_Original_XsdtAnyURI_

	XsdGoPkgHasAttr_Pic_XsdtAnyURI_

	XsdGoPkgHasAttr_ProductPictureId_XsdtString_

	XsdGoPkgHasAttr_OriginalSize_XsdtInteger_

	XsdGoPkgHasAttr_IsMain_XsdtInteger_

	XsdGoPkgHasAttr_No_XsdtInteger_

	XsdGoPkgHasAttr_IsRich_XsdtInteger_

	XsdGoPkgHasAttr_Pic500X500Width_XsdtInteger_

	XsdGoPkgHasAttr_LowSize_XsdtInteger_

	XsdGoPkgHasAttr_Source_XsdtAnyURI_

	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_PicWidth_XsdtInteger_

	XsdGoPkgHasAttr_ThumbSize_XsdtInteger_

	XsdGoPkgHasAttr_LowPicWidth_XsdtInteger_
}

//	If the WalkHandlers.TxsdProductGallerySequenceProductPicture function is not nil (ie. was set by outside code), calls it with this TxsdProductGallerySequenceProductPicture instance as the single argument. Then calls the Walk() method on 0/23 embed(s) and 0/0 field(s) belonging to this TxsdProductGallerySequenceProductPicture instance.
func (me *TxsdProductGallerySequenceProductPicture) Walk() (err error) {
	if fn := WalkHandlers.TxsdProductGallerySequenceProductPicture; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_ struct {
	ProductPictures []*TxsdProductGallerySequenceProductPicture `xml:"ProductPicture"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_ instance.
func (me *XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductPictures {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductGallery struct {
	XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_
}

//	If the WalkHandlers.TProductGallery function is not nil (ie. was set by outside code), calls it with this TProductGallery instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TProductGallery instance.
func (me *TProductGallery) Walk() (err error) {
	if fn := WalkHandlers.TProductGallery; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_ struct {
	ProductGalleries []*TProductGallery `xml:"ProductGallery"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_ instance.
func (me *XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductGalleries {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_OriginalMD5_XsdtString_ struct {
	OriginalMD5 xsdt.String `xml:"OriginalMD5,attr"`
}

type XsdGoPkgHasAttr_ContentType_XsdtString_ struct {
	ContentType xsdt.String `xml:"ContentType,attr"`
}

type XsdGoPkgHasAttr_PreviewUrl_XsdtString_ struct {
	PreviewUrl xsdt.String `xml:"PreviewUrl,attr"`
}

type XsdGoPkgHasAttr_PreviewSize_XsdtInteger_ struct {
	PreviewSize xsdt.Integer `xml:"PreviewSize,attr"`
}

type XsdGoPkgHasAttr_OriginalUrl_XsdtAnyURI_ struct {
	OriginalUrl xsdt.AnyURI `xml:"Original_URL,attr"`
}

type XsdGoPkgHasAttr_PreviewHeight_XsdtInteger_ struct {
	PreviewHeight xsdt.Integer `xml:"PreviewHeight,attr"`
}

type XsdGoPkgHasAttr_Uuid_XsdtString_ struct {
	Uuid xsdt.String `xml:"UUID,attr"`
}

type XsdGoPkgHasAttr_KeepAsURL_XsdtBoolean_ struct {
	KeepAsURL xsdt.Boolean `xml:"KeepAsURL,attr"`
}

type XsdGoPkgHasAttr_Height_XsdtInteger_ struct {
	Height xsdt.Integer `xml:"Height,attr"`
}

type XsdGoPkgHasAttr_IsConverted_XsdtInteger_ struct {
	IsConverted xsdt.Integer `xml:"IsConverted,attr"`
}

type XsdGoPkgHasAttr_MultimediaObjectId_XsdtInteger_ struct {
	MultimediaObjectId xsdt.Integer `xml:"MultimediaObject_ID,attr"`
}

type XsdGoPkgHasAttr_Width_XsdtInteger_ struct {
	Width xsdt.Integer `xml:"Width,attr"`
}

type XsdGoPkgHasAttr_PreviewWidth_XsdtInteger_ struct {
	PreviewWidth xsdt.Integer `xml:"PreviewWidth,attr"`
}

type XsdGoPkgHasAttr_ThumbUrl_XsdtString_ struct {
	ThumbUrl xsdt.String `xml:"ThumbUrl,attr"`
}

type TxsdProductMultimediaObjectSequenceMultimediaObject struct {
	XsdGoPkgHasAttr_PreviewWidth_XsdtInteger_

	XsdGoPkgHasAttr_ThumbUrl_XsdtString_

	XsdGoPkgHasAttr_Size_XsdtInteger_

	XsdGoPkgHasAttr_Description_XsdtString_

	XsdGoPkgHasAttr_PreviewSize_XsdtInteger_

	XsdGoPkgHasAttr_OriginalUrl_XsdtAnyURI_

	XsdGoPkgHasAttr_Source_XsdtAnyURI_

	XsdGoPkgHasAttr_IsRich_XsdtInteger_

	XsdGoPkgHasAttr_PreviewHeight_XsdtInteger_

	XsdGoPkgHasAttr_OriginalMD5_XsdtString_

	XsdGoPkgHasAttr_ContentType_XsdtString_

	XsdGoPkgHasAttr_PreviewUrl_XsdtString_

	XsdGoPkgHasAttr_KeepAsURL_XsdtBoolean_

	XsdGoPkgHasAttr_Height_XsdtInteger_

	XsdGoPkgHasAttr_IsConverted_XsdtInteger_

	XsdGoPkgHasAttr_Uuid_XsdtString_

	XsdGoPkgHasAttr_Url_XsdtAnyURI_

	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_Original_XsdtAnyURI_

	XsdGoPkgHasAttr_Date_XsdtString_

	XsdGoPkgHasAttr_Width_XsdtInteger_

	XsdGoPkgHasAttr_Type_XsdtString_

	XsdGoPkgHasAttr_MultimediaObjectId_XsdtInteger_
}

//	If the WalkHandlers.TxsdProductMultimediaObjectSequenceMultimediaObject function is not nil (ie. was set by outside code), calls it with this TxsdProductMultimediaObjectSequenceMultimediaObject instance as the single argument. Then calls the Walk() method on 0/23 embed(s) and 0/0 field(s) belonging to this TxsdProductMultimediaObjectSequenceMultimediaObject instance.
func (me *TxsdProductMultimediaObjectSequenceMultimediaObject) Walk() (err error) {
	if fn := WalkHandlers.TxsdProductMultimediaObjectSequenceMultimediaObject; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_ struct {
	MultimediaObjects []*TxsdProductMultimediaObjectSequenceMultimediaObject `xml:"MultimediaObject"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_ instance.
func (me *XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.MultimediaObjects {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductMultimediaObject struct {
	XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_
}

//	If the WalkHandlers.TProductMultimediaObject function is not nil (ie. was set by outside code), calls it with this TProductMultimediaObject instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TProductMultimediaObject instance.
func (me *TProductMultimediaObject) Walk() (err error) {
	if fn := WalkHandlers.TProductMultimediaObject; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_ struct {
	ProductMultimediaObjects []*TProductMultimediaObject `xml:"ProductMultimediaObject"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_ instance.
func (me *XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductMultimediaObjects {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_ struct {
	Products []*TProduct `xml:"Product"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_ instance.
func (me *XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductBundled struct {
	XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_

	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TProductBundled function is not nil (ie. was set by outside code), calls it with this TProductBundled instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TProductBundled instance.
func (me *TProductBundled) Walk() (err error) {
	if fn := WalkHandlers.TProductBundled; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_ struct {
	ProductBundleds []*TProductBundled `xml:"ProductBundled"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_ instance.
func (me *XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductBundleds {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_HighPicWidth_XsdtInteger_ struct {
	HighPicWidth xsdt.Integer `xml:"HighPicWidth,attr"`
}

type XsdGoPkgHasAttr_Catid_XsdtInteger_ struct {
	Catid xsdt.Integer `xml:"catid,attr"`
}

type TFeatureLogoCategory struct {
	XsdGoPkgHasAttr_Catid_XsdtInteger_
}

//	If the WalkHandlers.TFeatureLogoCategory function is not nil (ie. was set by outside code), calls it with this TFeatureLogoCategory instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TFeatureLogoCategory instance.
func (me *TFeatureLogoCategory) Walk() (err error) {
	if fn := WalkHandlers.TFeatureLogoCategory; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_ struct {
	FeatureLogoCategories []*TFeatureLogoCategory `xml:"FeatureLogoCategory"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_ instance.
func (me *XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureLogoCategories {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFeatureLogoCategoriesList struct {
	XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_
}

//	If the WalkHandlers.TFeatureLogoCategoriesList function is not nil (ie. was set by outside code), calls it with this TFeatureLogoCategoriesList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TFeatureLogoCategoriesList instance.
func (me *TFeatureLogoCategoriesList) Walk() (err error) {
	if fn := WalkHandlers.TFeatureLogoCategoriesList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_ struct {
	FeatureLogoCategories *TFeatureLogoCategoriesList `xml:"FeatureLogoCategories"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_ instance.
func (me *XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureLogoCategories.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Link_XsdtAnyURI_ struct {
	Link xsdt.AnyURI `xml:"Link,attr"`
}

type XsdGoPkgHasAttr_FeatureId_XsdtInteger_ struct {
	FeatureId xsdt.Integer `xml:"Feature_ID,attr"`
}

type TFeatureLogoValue struct {
	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TFeatureLogoValue function is not nil (ie. was set by outside code), calls it with this TFeatureLogoValue instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TFeatureLogoValue instance.
func (me *TFeatureLogoValue) Walk() (err error) {
	if fn := WalkHandlers.TFeatureLogoValue; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_ struct {
	FeatureLogoValues []*TFeatureLogoValue `xml:"FeatureLogoValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_ instance.
func (me *XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureLogoValues {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFeatureValuesList struct {
	XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_
}

//	If the WalkHandlers.TFeatureValuesList function is not nil (ie. was set by outside code), calls it with this TFeatureValuesList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TFeatureValuesList instance.
func (me *TFeatureValuesList) Walk() (err error) {
	if fn := WalkHandlers.TFeatureValuesList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_ struct {
	FeatureLogoValues *TFeatureValuesList `xml:"FeatureLogoValues"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_ instance.
func (me *XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureLogoValues.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFeatureLogo struct {
	XsdGoPkgHasAttr_Size_XsdtInteger_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_

	XsdGoPkgHasAttr_Height_XsdtInteger_

	XsdGoPkgHasAttr_LogoPic_XsdtAnyURI_

	XsdGoPkgHasAttr_Link_XsdtAnyURI_

	XsdGoPkgHasAttr_Width_XsdtInteger_

	XsdGoPkgHasAttr_FeatureId_XsdtInteger_

	XsdGoPkgHasAttr_Value_XsdtString_

	XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_

	XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_
}

//	If the WalkHandlers.TFeatureLogo function is not nil (ie. was set by outside code), calls it with this TFeatureLogo instance as the single argument. Then calls the Walk() method on 3/11 embed(s) and 0/0 field(s) belonging to this TFeatureLogo instance.
func (me *TFeatureLogo) Walk() (err error) {
	if fn := WalkHandlers.TFeatureLogo; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_ struct {
	FeatureLogos []*TFeatureLogo `xml:"FeatureLogo"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_ instance.
func (me *XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureLogos {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_ struct {
	ProductFamilySlogans []*TName `xml:"ProductFamilySlogan"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_ instance.
func (me *XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductFamilySlogans {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductFamilySlogans struct {
	XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_
}

//	If the WalkHandlers.TProductFamilySlogans function is not nil (ie. was set by outside code), calls it with this TProductFamilySlogans instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TProductFamilySlogans instance.
func (me *TProductFamilySlogans) Walk() (err error) {
	if fn := WalkHandlers.TProductFamilySlogans; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_ struct {
	ProductFamilySloganses []*TProductFamilySlogans `xml:"ProductFamilySlogans"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_ instance.
func (me *XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductFamilySloganses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_CategoryId_XsdtInteger_ struct {
	CategoryId xsdt.Integer `xml:"Category_ID,attr"`
}

type TParentProductFamily struct {
	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TParentProductFamily function is not nil (ie. was set by outside code), calls it with this TParentProductFamily instance as the single argument. Then calls the Walk() method on 0/1 embed(s) and 0/0 field(s) belonging to this TParentProductFamily instance.
func (me *TParentProductFamily) Walk() (err error) {
	if fn := WalkHandlers.TParentProductFamily; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_ struct {
	ParentProductFamilies []*TParentProductFamily `xml:"ParentProductFamily"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_ instance.
func (me *XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ParentProductFamilies {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_ struct {
	Suppliers []*TSupplier `xml:"Supplier"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_ instance.
func (me *XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Suppliers {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_ struct {
	ProductSeriesSlogans []*TName `xml:"ProductSeriesSlogan"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_ instance.
func (me *XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductSeriesSlogans {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductSeriesSlogans struct {
	XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_
}

//	If the WalkHandlers.TProductSeriesSlogans function is not nil (ie. was set by outside code), calls it with this TProductSeriesSlogans instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TProductSeriesSlogans instance.
func (me *TProductSeriesSlogans) Walk() (err error) {
	if fn := WalkHandlers.TProductSeriesSlogans; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_ struct {
	ProductSeriesSloganses []*TProductSeriesSlogans `xml:"ProductSeriesSlogans"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_ instance.
func (me *XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductSeriesSloganses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TSeries struct {
	XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_

	XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_

	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TSeries function is not nil (ie. was set by outside code), calls it with this TSeries instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TSeries instance.
func (me *TSeries) Walk() (err error) {
	if fn := WalkHandlers.TSeries; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_ struct {
	Serieses []*TSeries `xml:"Series"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_ instance.
func (me *XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Serieses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductFamily struct {
	XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_

	XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_

	XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_

	XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_

	XsdGoPkgHasAttr_Name_XsdtString_

	XsdGoPkgHasAttr_ThumbPic_XsdtAnyURI_

	XsdGoPkgHasAttr_LowPic_XsdtAnyURI_

	XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_

	XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_

	XsdGoPkgHasAttr_CategoryId_XsdtInteger_

	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TProductFamily function is not nil (ie. was set by outside code), calls it with this TProductFamily instance as the single argument. Then calls the Walk() method on 6/11 embed(s) and 0/0 field(s) belonging to this TProductFamily instance.
func (me *TProductFamily) Walk() (err error) {
	if fn := WalkHandlers.TProductFamily; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_ struct {
	ProductFamily *TProductFamily `xml:"ProductFamily"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_ instance.
func (me *XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductFamily.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_MapProductId_XsdtInteger_ struct {
	MapProductId xsdt.Integer `xml:"Map_product_id,attr"`
}

type XsdGoPkgHasAttr_FeatureGroup_XsdtString_ struct {
	FeatureGroup xsdt.String `xml:"FeatureGroup,attr"`
}

type TCategoryFeatureGroup struct {
	XsdGoPkgHasAttr_No_XsdtInteger_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_FeatureGroup_XsdtString_

	XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_
}

//	If the WalkHandlers.TCategoryFeatureGroup function is not nil (ie. was set by outside code), calls it with this TCategoryFeatureGroup instance as the single argument. Then calls the Walk() method on 1/4 embed(s) and 0/0 field(s) belonging to this TCategoryFeatureGroup instance.
func (me *TCategoryFeatureGroup) Walk() (err error) {
	if fn := WalkHandlers.TCategoryFeatureGroup; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_ struct {
	CategoryFeatureGroups []*TCategoryFeatureGroup `xml:"CategoryFeatureGroup"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_ instance.
func (me *XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.CategoryFeatureGroups {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Uncatid_XsdtString_ struct {
	Uncatid xsdt.String `xml:"UNCATID,attr"`
}

type TVirtualCategory struct {
	XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Uncatid_XsdtString_
}

//	If the WalkHandlers.TVirtualCategory function is not nil (ie. was set by outside code), calls it with this TVirtualCategory instance as the single argument. Then calls the Walk() method on 1/3 embed(s) and 0/0 field(s) belonging to this TVirtualCategory instance.
func (me *TVirtualCategory) Walk() (err error) {
	if fn := WalkHandlers.TVirtualCategory; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_ struct {
	VirtualCategories []*TVirtualCategory `xml:"VirtualCategory"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_ instance.
func (me *XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.VirtualCategories {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TVirtualCategories struct {
	XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_
}

//	If the WalkHandlers.TVirtualCategories function is not nil (ie. was set by outside code), calls it with this TVirtualCategories instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TVirtualCategories instance.
func (me *TVirtualCategories) Walk() (err error) {
	if fn := WalkHandlers.TVirtualCategories; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_ struct {
	VirtualCategories *TVirtualCategories `xml:"VirtualCategories"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_ instance.
func (me *XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.VirtualCategories.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TKeywords struct {
	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_Value_XsdtString_
}

//	If the WalkHandlers.TKeywords function is not nil (ie. was set by outside code), calls it with this TKeywords instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TKeywords instance.
func (me *TKeywords) Walk() (err error) {
	if fn := WalkHandlers.TKeywords; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_ struct {
	Keywordses []*TKeywords `xml:"Keywords"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_ instance.
func (me *XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Keywordses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_ struct {
	Nameses []*TNames `xml:"Names"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_ instance.
func (me *XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Nameses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TParentCategory struct {
	XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_

	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TParentCategory function is not nil (ie. was set by outside code), calls it with this TParentCategory instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TParentCategory instance.
func (me *TParentCategory) Walk() (err error) {
	if fn := WalkHandlers.TParentCategory; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_ struct {
	ParentCategory *TParentCategory `xml:"ParentCategory"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_ instance.
func (me *XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ParentCategory.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_ struct {
	Uncatids []xsdt.String `xml:"UNCATID"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_ instance.
func (me *XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Visible_XsdtBoolean_ struct {
	Visible xsdt.Boolean `xml:"Visible,attr"`
}

type TCategory struct {
	XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_

	XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Uncatid_XsdtString_

	XsdGoPkgHasAttr_Searchable_XsdtBoolean_

	XsdGoPkgHasAttr_Score_XsdtInteger_

	XsdGoPkgHasAttr_ThumbPic_XsdtAnyURI_

	XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_

	XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_

	XsdGoPkgHasAttr_LowPic_XsdtAnyURI_

	XsdGoPkgHasAttr_Visible_XsdtBoolean_

	XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_

	XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_

	XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_

	XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_

	XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_
}

//	If the WalkHandlers.TCategory function is not nil (ie. was set by outside code), calls it with this TCategory instance as the single argument. Then calls the Walk() method on 9/16 embed(s) and 0/0 field(s) belonging to this TCategory instance.
func (me *TCategory) Walk() (err error) {
	if fn := WalkHandlers.TCategory; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_ struct {
	Categories []*TCategory `xml:"Category"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_ instance.
func (me *XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Categories {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_EANCode_XsdtString_ struct {
	EANCode xsdt.String `xml:"EANCode,attr"`
}

type XsdGoPkgHasAttr_HighPicHeight_XsdtInteger_ struct {
	HighPicHeight xsdt.Integer `xml:"HighPicHeight,attr"`
}

type TProductBulletsHtml struct {
	XsdGoPkgHasAttr_Class_XsdtString_

	XsdGoPkgHasAttr_Langid_XsdtInt_
}

//	If the WalkHandlers.TProductBulletsHtml function is not nil (ie. was set by outside code), calls it with this TProductBulletsHtml instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TProductBulletsHtml instance.
func (me *TProductBulletsHtml) Walk() (err error) {
	if fn := WalkHandlers.TProductBulletsHtml; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_ struct {
	ProductBulletsHtmls []*TProductBulletsHtml `xml:"ProductBullets_HTML"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_ instance.
func (me *XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductBulletsHtmls {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductBulletsHTMLs struct {
	XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_
}

//	If the WalkHandlers.TProductBulletsHTMLs function is not nil (ie. was set by outside code), calls it with this TProductBulletsHTMLs instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TProductBulletsHTMLs instance.
func (me *TProductBulletsHTMLs) Walk() (err error) {
	if fn := WalkHandlers.TProductBulletsHTMLs; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_ struct {
	ProductBulletsHTMLs *TProductBulletsHTMLs `xml:"ProductBullets_HTMLs"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_ instance.
func (me *XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductBulletsHTMLs.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_ struct {
	ReasonToBuys []*TProductBullet `xml:"ReasonToBuy"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_ instance.
func (me *XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ReasonToBuys {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TReasonsToBuy struct {
	XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_
}

//	If the WalkHandlers.TReasonsToBuy function is not nil (ie. was set by outside code), calls it with this TReasonsToBuy instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TReasonsToBuy instance.
func (me *TReasonsToBuy) Walk() (err error) {
	if fn := WalkHandlers.TReasonsToBuy; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_ struct {
	ReasonsToBuy *TReasonsToBuy `xml:"ReasonsToBuy"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_ instance.
func (me *XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ReasonsToBuy.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProduct struct {
	XsdGoPkgHasAttr_Name_XsdtString_

	XsdGoPkgHasAttr_BrandEndOfSaleDate_XsdtString_

	XsdGoPkgHasAttr_ProductsDescription_XsdtString_

	XsdGoPkgHasAttr_Pic500X500Width_XsdtInteger_

	XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_

	XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_

	XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_

	XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_

	XsdGoPkgHasAttr_Code_XsdtInteger_

	XsdGoPkgHasAttr_Pic500X500Height_XsdtInteger_

	XsdGoPkgHasAttr_HighPicSize_XsdtInteger_

	XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_

	XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_

	XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_

	XsdGoPkgHasAttr_Source_XsdtAnyURI_

	XsdGoPkgHasAttr_Original_XsdtAnyURI_

	XsdGoPkgHasAttr_BrandStartOfSaleDate_XsdtString_

	XsdGoPkgHasAttr_ProdId_XsdtString_

	XsdGoPkgHasAttr_ThumbPicSize_XsdtInteger_

	XsdGoPkgHasAttr_ThumbPic_XsdtAnyURI_

	XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_

	XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_

	XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_

	XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_

	XsdGoPkgHasAttr_HighPic_XsdtAnyURI_

	XsdGoPkgHasAttr_Relevance_XsdtInteger_

	XsdGoPkgHasAttr_LowPicSize_XsdtInteger_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_

	XsdGoPkgHasAttr_HighPicWidth_XsdtInteger_

	XsdGoPkgHasAttr_ErrorMessage_XsdtString_

	XsdGoPkgHasAttr_Pic500X500Size_XsdtInteger_

	XsdGoPkgHasAttr_Score_XsdtInteger_

	XsdGoPkgHasAttr_Quality_XsdtString_

	XsdGoPkgHasAttr_LowPicHeight_XsdtInteger_

	XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_

	XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_

	XsdGoPkgHasAttr_Pic500X500_XsdtAnyURI_

	XsdGoPkgHasAttr_MapProductId_XsdtInteger_

	XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_

	XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_

	XsdGoPkgHasAttr_Title_XsdtString_

	XsdGoPkgHasAttr_EANCode_XsdtString_

	XsdGoPkgHasAttr_LowPic_XsdtAnyURI_

	XsdGoPkgHasAttr_HighPicHeight_XsdtInteger_

	XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_

	XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_

	XsdGoPkgHasAttr_ReleaseDate_XsdtString_

	XsdGoPkgHasAttr_LowPicWidth_XsdtInteger_
}

//	If the WalkHandlers.TProduct function is not nil (ie. was set by outside code), calls it with this TProduct instance as the single argument. Then calls the Walk() method on 18/49 embed(s) and 0/0 field(s) belonging to this TProduct instance.
func (me *TProduct) Walk() (err error) {
	if fn := WalkHandlers.TProduct; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_ struct {
	Products []*TProduct `xml:"Product"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_ instance.
func (me *XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Products {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductsListLookup struct {
	XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_

	XsdGoPkgHasAttr_Code_XsdtInteger_
}

//	If the WalkHandlers.TProductsListLookup function is not nil (ie. was set by outside code), calls it with this TProductsListLookup instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TProductsListLookup instance.
func (me *TProductsListLookup) Walk() (err error) {
	if fn := WalkHandlers.TProductsListLookup; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_ struct {
	ProductsListLookup *TProductsListLookup `xml:"ProductsListLookup"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_ instance.
func (me *XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductsListLookup.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_ProductId_XsdtInteger_ struct {
	ProductId xsdt.Integer `xml:"Product_id,attr"`
}

type XsdGoPkgHasAttr_Status_XsdtInteger_ struct {
	Status xsdt.Integer `xml:"Status,attr"`
}

type XsdGoPkgHasAttr_DescribeProductRequestId_XsdtInteger_ struct {
	DescribeProductRequestId xsdt.Integer `xml:"DescribeProductRequest_ID,attr"`
}

type XsdGoPkgHasAttr_Error_XsdtString_ struct {
	Error xsdt.String `xml:"Error,attr"`
}

type TxsdDescribeProductsResponseSequenceDescribeProductResponse struct {
	XsdGoPkgHasAttr_ProductId_XsdtInteger_

	XsdGoPkgHasAttr_Status_XsdtInteger_

	XsdGoPkgHasAttr_DescribeProductRequestId_XsdtInteger_

	XsdGoPkgHasAttr_Error_XsdtString_
}

//	If the WalkHandlers.TxsdDescribeProductsResponseSequenceDescribeProductResponse function is not nil (ie. was set by outside code), calls it with this TxsdDescribeProductsResponseSequenceDescribeProductResponse instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TxsdDescribeProductsResponseSequenceDescribeProductResponse instance.
func (me *TxsdDescribeProductsResponseSequenceDescribeProductResponse) Walk() (err error) {
	if fn := WalkHandlers.TxsdDescribeProductsResponseSequenceDescribeProductResponse; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_ struct {
	DescribeProductResponses []*TxsdDescribeProductsResponseSequenceDescribeProductResponse `xml:"DescribeProductResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_ instance.
func (me *XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.DescribeProductResponses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TDescribeProductsResponse struct {
	XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_
}

//	If the WalkHandlers.TDescribeProductsResponse function is not nil (ie. was set by outside code), calls it with this TDescribeProductsResponse instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TDescribeProductsResponse instance.
func (me *TDescribeProductsResponse) Walk() (err error) {
	if fn := WalkHandlers.TDescribeProductsResponse; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_ struct {
	DescribeProductsResponse *TDescribeProductsResponse `xml:"DescribeProductsResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_ instance.
func (me *XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.DescribeProductsResponse.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TCategoriesList struct {
	XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_
}

//	If the WalkHandlers.TCategoriesList function is not nil (ie. was set by outside code), calls it with this TCategoriesList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TCategoriesList instance.
func (me *TCategoriesList) Walk() (err error) {
	if fn := WalkHandlers.TCategoriesList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_ struct {
	CategoriesList *TCategoriesList `xml:"CategoriesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_ instance.
func (me *XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.CategoriesList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductsList struct {
	XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_
}

//	If the WalkHandlers.TProductsList function is not nil (ie. was set by outside code), calls it with this TProductsList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TProductsList instance.
func (me *TProductsList) Walk() (err error) {
	if fn := WalkHandlers.TProductsList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_ struct {
	ProductsLists []*TProductsList `xml:"ProductsList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_ instance.
func (me *XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductsLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFulltextProductsSearchResponse struct {
	XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_
}

//	If the WalkHandlers.TFulltextProductsSearchResponse function is not nil (ie. was set by outside code), calls it with this TFulltextProductsSearchResponse instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TFulltextProductsSearchResponse instance.
func (me *TFulltextProductsSearchResponse) Walk() (err error) {
	if fn := WalkHandlers.TFulltextProductsSearchResponse; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_ struct {
	FulltextProductsSearchResponse *TFulltextProductsSearchResponse `xml:"FulltextProductsSearchResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_ instance.
func (me *XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FulltextProductsSearchResponse.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_RequestId_XsdtInteger_ struct {
	RequestId xsdt.Integer `xml:"Request_ID,attr"`
}

type XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_ struct {
	ProductFamilies []*TProductFamily `xml:"ProductFamily"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_ instance.
func (me *XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductFamilies {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TSupplierProductFamiliesList struct {
	XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_
}

//	If the WalkHandlers.TSupplierProductFamiliesList function is not nil (ie. was set by outside code), calls it with this TSupplierProductFamiliesList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TSupplierProductFamiliesList instance.
func (me *TSupplierProductFamiliesList) Walk() (err error) {
	if fn := WalkHandlers.TSupplierProductFamiliesList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_ struct {
	SupplierProductFamiliesList *TSupplierProductFamiliesList `xml:"SupplierProductFamiliesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_ instance.
func (me *XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.SupplierProductFamiliesList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFeaturesList struct {
	XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_
}

//	If the WalkHandlers.TFeaturesList function is not nil (ie. was set by outside code), calls it with this TFeaturesList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TFeaturesList instance.
func (me *TFeaturesList) Walk() (err error) {
	if fn := WalkHandlers.TFeaturesList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_ struct {
	FeaturesList *TFeaturesList `xml:"FeaturesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_ instance.
func (me *XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeaturesList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TStatisticQuery struct {
	XsdGoPkgHasAttr_Period_XsdtString_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Code_XsdtInteger_
}

//	If the WalkHandlers.TStatisticQuery function is not nil (ie. was set by outside code), calls it with this TStatisticQuery instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TStatisticQuery instance.
func (me *TStatisticQuery) Walk() (err error) {
	if fn := WalkHandlers.TStatisticQuery; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_ struct {
	StatisticQueries []*TStatisticQuery `xml:"StatisticQuery"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_ instance.
func (me *XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.StatisticQueries {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TStatisticQueryListResponse struct {
	XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_
}

//	If the WalkHandlers.TStatisticQueryListResponse function is not nil (ie. was set by outside code), calls it with this TStatisticQueryListResponse instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TStatisticQueryListResponse instance.
func (me *TStatisticQueryListResponse) Walk() (err error) {
	if fn := WalkHandlers.TStatisticQueryListResponse; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_ struct {
	StatisticQueryListResponse *TStatisticQueryListResponse `xml:"StatisticQueryListResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_ instance.
func (me *XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.StatisticQueryListResponse.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TSuppliersList struct {
	XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_
}

//	If the WalkHandlers.TSuppliersList function is not nil (ie. was set by outside code), calls it with this TSuppliersList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TSuppliersList instance.
func (me *TSuppliersList) Walk() (err error) {
	if fn := WalkHandlers.TSuppliersList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_ struct {
	SuppliersList *TSuppliersList `xml:"SuppliersList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_ instance.
func (me *XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.SuppliersList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Status_XsdtString_ struct {
	Status xsdt.String `xml:"Status,attr"`
}

type XsdGoPkgHasAttr_StatisticQueryId_XsdtInteger_ struct {
	StatisticQueryId xsdt.Integer `xml:"StatisticQuery_ID,attr"`
}

type TStatisticQueryDate struct {
	XsdGoPkgHasAttr_Date_XsdtString_

	XsdGoPkgHasAttr_Period_XsdtString_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_StatisticQueryId_XsdtInteger_
}

//	If the WalkHandlers.TStatisticQueryDate function is not nil (ie. was set by outside code), calls it with this TStatisticQueryDate instance as the single argument. Then calls the Walk() method on 0/4 embed(s) and 0/0 field(s) belonging to this TStatisticQueryDate instance.
func (me *TStatisticQueryDate) Walk() (err error) {
	if fn := WalkHandlers.TStatisticQueryDate; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_ struct {
	StatisticQueryDates []*TStatisticQueryDate `xml:"StatisticQueryDate"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_ instance.
func (me *XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.StatisticQueryDates {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TStatisticQueryDatesListResponse struct {
	XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_
}

//	If the WalkHandlers.TStatisticQueryDatesListResponse function is not nil (ie. was set by outside code), calls it with this TStatisticQueryDatesListResponse instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TStatisticQueryDatesListResponse instance.
func (me *TStatisticQueryDatesListResponse) Walk() (err error) {
	if fn := WalkHandlers.TStatisticQueryDatesListResponse; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_ struct {
	StatisticQueryDatesListResponse *TStatisticQueryDatesListResponse `xml:"StatisticQueryDatesListResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_ instance.
func (me *XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.StatisticQueryDatesListResponse.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TCategoryFeaturesList struct {
	XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_

	XsdGoPkgHasAttr_Code_XsdtInteger_
}

//	If the WalkHandlers.TCategoryFeaturesList function is not nil (ie. was set by outside code), calls it with this TCategoryFeaturesList instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TCategoryFeaturesList instance.
func (me *TCategoryFeaturesList) Walk() (err error) {
	if fn := WalkHandlers.TCategoryFeaturesList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_ struct {
	CategoryFeaturesList *TCategoryFeaturesList `xml:"CategoryFeaturesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_ instance.
func (me *XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.CategoryFeaturesList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_ struct {
	Measures []*TMeasure `xml:"Measure"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_ instance.
func (me *XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Measures {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TMeasuresList struct {
	XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_
}

//	If the WalkHandlers.TMeasuresList function is not nil (ie. was set by outside code), calls it with this TMeasuresList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TMeasuresList instance.
func (me *TMeasuresList) Walk() (err error) {
	if fn := WalkHandlers.TMeasuresList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_ struct {
	MeasuresList *TMeasuresList `xml:"MeasuresList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_ instance.
func (me *XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.MeasuresList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFeatureValue struct {
	XsdGoPkgHasAttr_Langid_XsdtInteger_

	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TFeatureValue function is not nil (ie. was set by outside code), calls it with this TFeatureValue instance as the single argument. Then calls the Walk() method on 0/2 embed(s) and 0/0 field(s) belonging to this TFeatureValue instance.
func (me *TFeatureValue) Walk() (err error) {
	if fn := WalkHandlers.TFeatureValue; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_ struct {
	FeatureValues []*TFeatureValue `xml:"FeatureValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_ instance.
func (me *XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureValues {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_KeyValue_XsdtString_ struct {
	KeyValue xsdt.String `xml:"Key_Value,attr"`
}

type XsdGoPkgHasAttr_GroupId_XsdtInteger_ struct {
	GroupId xsdt.Integer `xml:"Group_ID,attr"`
}

type TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary struct {
	XsdGoPkgHasAttr_KeyValue_XsdtString_

	XsdGoPkgHasAttr_GroupId_XsdtInteger_

	XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_
}

//	If the WalkHandlers.TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary function is not nil (ie. was set by outside code), calls it with this TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary instance as the single argument. Then calls the Walk() method on 1/3 embed(s) and 0/0 field(s) belonging to this TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary instance.
func (me *TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary) Walk() (err error) {
	if fn := WalkHandlers.TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_ struct {
	FeatureValuesVocabularies []*TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary `xml:"FeatureValuesVocabulary"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_ instance.
func (me *XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureValuesVocabularies {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TFeatureValuesVocabularyList struct {
	XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_
}

//	If the WalkHandlers.TFeatureValuesVocabularyList function is not nil (ie. was set by outside code), calls it with this TFeatureValuesVocabularyList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TFeatureValuesVocabularyList instance.
func (me *TFeatureValuesVocabularyList) Walk() (err error) {
	if fn := WalkHandlers.TFeatureValuesVocabularyList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_ struct {
	FeatureValuesVocabularyList *TFeatureValuesVocabularyList `xml:"FeatureValuesVocabularyList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_ instance.
func (me *XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureValuesVocabularyList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_ struct {
	ProductsList *TProductsList `xml:"ProductsList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_ instance.
func (me *XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductsList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductsStatistic struct {
	XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_
}

//	If the WalkHandlers.TProductsStatistic function is not nil (ie. was set by outside code), calls it with this TProductsStatistic instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TProductsStatistic instance.
func (me *TProductsStatistic) Walk() (err error) {
	if fn := WalkHandlers.TProductsStatistic; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_ struct {
	ProductsStatistic *TProductsStatistic `xml:"ProductsStatistic"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_ instance.
func (me *XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductsStatistic.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Code_XsdtString_ struct {
	Code xsdt.String `xml:"Code,attr"`
}

type XsdGoPkgHasAttr_ShortCode_XsdtString_ struct {
	ShortCode xsdt.String `xml:"ShortCode,attr"`
}

type XsdGoPkgHasAttr_Sid_XsdtString_ struct {
	Sid xsdt.String `xml:"Sid,attr"`
}

type XsdGoPkgHasAttr_SystemOfMeasurement_XsdtString_ struct {
	SystemOfMeasurement xsdt.String `xml:"System_Of_Measurement,attr"`
}

type TxsdCountriesSequenceCountry struct {
	XsdGoPkgHasAttr_Code_XsdtString_

	XsdGoPkgHasAttr_SystemOfMeasurement_XsdtString_

	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TxsdCountriesSequenceCountry function is not nil (ie. was set by outside code), calls it with this TxsdCountriesSequenceCountry instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdCountriesSequenceCountry instance.
func (me *TxsdCountriesSequenceCountry) Walk() (err error) {
	if fn := WalkHandlers.TxsdCountriesSequenceCountry; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_ struct {
	Countries []*TxsdCountriesSequenceCountry `xml:"Country"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_ instance.
func (me *XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Countries {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TCountries struct {
	XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_
}

//	If the WalkHandlers.TCountries function is not nil (ie. was set by outside code), calls it with this TCountries instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TCountries instance.
func (me *TCountries) Walk() (err error) {
	if fn := WalkHandlers.TCountries; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_ struct {
	Countrieses []*TCountries `xml:"Countries"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_ instance.
func (me *XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Countrieses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TLanguage struct {
	XsdGoPkgHasAttr_Sid_XsdtString_

	XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_

	XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Code_XsdtString_

	XsdGoPkgHasAttr_ShortCode_XsdtString_
}

//	If the WalkHandlers.TLanguage function is not nil (ie. was set by outside code), calls it with this TLanguage instance as the single argument. Then calls the Walk() method on 2/6 embed(s) and 0/0 field(s) belonging to this TLanguage instance.
func (me *TLanguage) Walk() (err error) {
	if fn := WalkHandlers.TLanguage; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_ struct {
	Languages []*TLanguage `xml:"Language"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_ instance.
func (me *XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Languages {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TLanguageList struct {
	XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_
}

//	If the WalkHandlers.TLanguageList function is not nil (ie. was set by outside code), calls it with this TLanguageList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TLanguageList instance.
func (me *TLanguageList) Walk() (err error) {
	if fn := WalkHandlers.TLanguageList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_ struct {
	LanguageList *TLanguageList `xml:"LanguageList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_ instance.
func (me *XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.LanguageList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TSupplierCategoriesList struct {
	XsdGoPkgHasAttr_Code_XsdtInteger_

	XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_

	XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_
}

//	If the WalkHandlers.TSupplierCategoriesList function is not nil (ie. was set by outside code), calls it with this TSupplierCategoriesList instance as the single argument. Then calls the Walk() method on 2/3 embed(s) and 0/0 field(s) belonging to this TSupplierCategoriesList instance.
func (me *TSupplierCategoriesList) Walk() (err error) {
	if fn := WalkHandlers.TSupplierCategoriesList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_ struct {
	SupplierCategoriesList *TSupplierCategoriesList `xml:"SupplierCategoriesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_ instance.
func (me *XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.SupplierCategoriesList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Confirmation_XsdtString_ struct {
	Confirmation xsdt.String `xml:"Confirmation,attr"`
}

type XsdGoPkgHasAttr_ComplaintStatusId_XsdtInteger_ struct {
	ComplaintStatusId xsdt.Integer `xml:"ComplaintStatus_ID,attr"`
}

type XsdGoPkgHasAttr_ProductComplaintRequestId_XsdtInteger_ struct {
	ProductComplaintRequestId xsdt.Integer `xml:"ProductComplaintRequest_ID,attr"`
}

type TxsdProductsComplaintResponseSequenceProductComplaintReponse struct {
	XsdGoPkgHasAttr_Error_XsdtString_

	XsdGoPkgHasAttr_Confirmation_XsdtString_

	XsdGoPkgHasAttr_ProductId_XsdtInteger_

	XsdGoPkgHasAttr_ComplaintStatusId_XsdtInteger_

	XsdGoPkgHasAttr_ProductComplaintRequestId_XsdtInteger_
}

//	If the WalkHandlers.TxsdProductsComplaintResponseSequenceProductComplaintReponse function is not nil (ie. was set by outside code), calls it with this TxsdProductsComplaintResponseSequenceProductComplaintReponse instance as the single argument. Then calls the Walk() method on 0/5 embed(s) and 0/0 field(s) belonging to this TxsdProductsComplaintResponseSequenceProductComplaintReponse instance.
func (me *TxsdProductsComplaintResponseSequenceProductComplaintReponse) Walk() (err error) {
	if fn := WalkHandlers.TxsdProductsComplaintResponseSequenceProductComplaintReponse; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_ struct {
	ProductComplaintReponses []*TxsdProductsComplaintResponseSequenceProductComplaintReponse `xml:"ProductComplaintReponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_ instance.
func (me *XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductComplaintReponses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TProductsComplaintResponse struct {
	XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_
}

//	If the WalkHandlers.TProductsComplaintResponse function is not nil (ie. was set by outside code), calls it with this TProductsComplaintResponse instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TProductsComplaintResponse instance.
func (me *TProductsComplaintResponse) Walk() (err error) {
	if fn := WalkHandlers.TProductsComplaintResponse; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_ struct {
	ProductsComplaintResponse *TProductsComplaintResponse `xml:"ProductsComplaintResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_ instance.
func (me *XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductsComplaintResponse.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdDistributorListSequenceDistributor struct {
	XsdGoPkgHasAttr_Code_XsdtString_

	XsdGoPkgHasAttr_Name_XsdtString_

	XsdGoPkgHasAttr_Id_XsdtInteger_
}

//	If the WalkHandlers.TxsdDistributorListSequenceDistributor function is not nil (ie. was set by outside code), calls it with this TxsdDistributorListSequenceDistributor instance as the single argument. Then calls the Walk() method on 0/3 embed(s) and 0/0 field(s) belonging to this TxsdDistributorListSequenceDistributor instance.
func (me *TxsdDistributorListSequenceDistributor) Walk() (err error) {
	if fn := WalkHandlers.TxsdDistributorListSequenceDistributor; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_ struct {
	Distributors []*TxsdDistributorListSequenceDistributor `xml:"Distributor"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_ instance.
func (me *XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Distributors {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TDistributorList struct {
	XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_
}

//	If the WalkHandlers.TDistributorList function is not nil (ie. was set by outside code), calls it with this TDistributorList instance as the single argument. Then calls the Walk() method on 1/1 embed(s) and 0/0 field(s) belonging to this TDistributorList instance.
func (me *TDistributorList) Walk() (err error) {
	if fn := WalkHandlers.TDistributorList; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_ struct {
	DistributorList *TDistributorList `xml:"DistributorList"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_ instance.
func (me *XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.DistributorList.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TResponse struct {
	XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_

	XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_

	XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_

	XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_

	XsdGoPkgHasAttr_Id_XsdtInteger_

	XsdGoPkgHasAttr_Status_XsdtString_

	XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_

	XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_

	XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_

	XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_

	XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_

	XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_

	XsdGoPkgHasAttr_Error_XsdtString_

	XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_

	XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_

	XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_

	XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_

	XsdGoPkgHasAttr_Date_XsdtString_

	XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_

	XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_

	XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_

	XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_

	XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_

	XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_

	XsdGoPkgHasAttr_RequestId_XsdtInteger_
}

//	If the WalkHandlers.TResponse function is not nil (ie. was set by outside code), calls it with this TResponse instance as the single argument. Then calls the Walk() method on 20/25 embed(s) and 0/0 field(s) belonging to this TResponse instance.
func (me *TResponse) Walk() (err error) {
	if fn := WalkHandlers.TResponse; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_ struct {
	Response *TResponse `xml:"Response"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_ instance.
func (me *XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Response.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_ struct {
	Product *TProduct `xml:"Product"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_ instance.
func (me *XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Product.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type TxsdIcecatInterface struct {
	XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_

	XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_
}

//	If the WalkHandlers.TxsdIcecatInterface function is not nil (ie. was set by outside code), calls it with this TxsdIcecatInterface instance as the single argument. Then calls the Walk() method on 2/2 embed(s) and 0/0 field(s) belonging to this TxsdIcecatInterface instance.
func (me *TxsdIcecatInterface) Walk() (err error) {
	if fn := WalkHandlers.TxsdIcecatInterface; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if err = me.XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_IcecatInterface struct {
	IcecatInterface *TxsdIcecatInterface `xml:"ICECAT-interface"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_IcecatInterface function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_IcecatInterface instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_IcecatInterface instance.
func (me *XsdGoPkgHasElem_IcecatInterface) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_IcecatInterface; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.IcecatInterface.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_IcecatInterface struct {
	IcecatInterfaces []*TxsdIcecatInterface `xml:"ICECAT-interface"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_IcecatInterface function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_IcecatInterface instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_IcecatInterface instance.
func (me *XsdGoPkgHasElems_IcecatInterface) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_IcecatInterface; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.IcecatInterfaces {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Path_XsdtAnyURI_ struct {
	Path xsdt.AnyURI `xml:"path,attr"`
}

type XsdGoPkgHasAttr_Updated_XsdtString_ struct {
	Updated xsdt.String `xml:"Updated,attr"`
}

type XsdGoPkgHasAttr_SupplierId_XsdtInteger_ struct {
	SupplierId xsdt.Integer `xml:"Supplier_id,attr"`
}

type TxsdFilesSequenceFile struct {
	XsdGoPkgHasAttr_Updated_XsdtString_

	XsdGoPkgHasAttr_Quality_XsdtString_

	XsdGoPkgHasAttr_SupplierId_XsdtInteger_

	XsdGoPkgHasAttr_ProdId_XsdtString_

	XsdGoPkgHasAttr_Path_XsdtAnyURI_

	XsdGoPkgHasAttr_ProductId_XsdtInteger_
}

//	If the WalkHandlers.TxsdFilesSequenceFile function is not nil (ie. was set by outside code), calls it with this TxsdFilesSequenceFile instance as the single argument. Then calls the Walk() method on 0/6 embed(s) and 0/0 field(s) belonging to this TxsdFilesSequenceFile instance.
func (me *TxsdFilesSequenceFile) Walk() (err error) {
	if fn := WalkHandlers.TxsdFilesSequenceFile; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_ struct {
	Files []*TxsdFilesSequenceFile `xml:"file"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_ instance.
func (me *XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Files {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Generated_XsdtInteger_ struct {
	Generated xsdt.Integer `xml:"Generated,attr"`
}

type TxsdFiles struct {
	XsdGoPkgHasAttr_Generated_XsdtInteger_

	XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_
}

//	If the WalkHandlers.TxsdFiles function is not nil (ie. was set by outside code), calls it with this TxsdFiles instance as the single argument. Then calls the Walk() method on 1/2 embed(s) and 0/0 field(s) belonging to this TxsdFiles instance.
func (me *TxsdFiles) Walk() (err error) {
	if fn := WalkHandlers.TxsdFiles; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_Files struct {
	Fileses []*TxsdFiles `xml:"files"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_Files function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_Files instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_Files instance.
func (me *XsdGoPkgHasElems_Files) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_Files; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Fileses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_Files struct {
	Files *TxsdFiles `xml:"files"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_Files function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Files instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Files instance.
func (me *XsdGoPkgHasElem_Files) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_Files; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Files.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_CountriessequenceLanguageschema_Countries_TCountries_ struct {
	Countries *TCountries `xml:"Countries"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_CountriessequenceLanguageschema_Countries_TCountries_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_CountriessequenceLanguageschema_Countries_TCountries_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_CountriessequenceLanguageschema_Countries_TCountries_ instance.
func (me *XsdGoPkgHasElem_CountriessequenceLanguageschema_Countries_TCountries_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_CountriessequenceLanguageschema_Countries_TCountries_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Countries.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_ struct {
	RestrictedValue *TRestrictedValue `xml:"RestrictedValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_ instance.
func (me *XsdGoPkgHasElem_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.RestrictedValue.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DescriptionsallMeasureschema_Descriptions_TDescriptions_ struct {
	Descriptionses []*TDescriptions `xml:"Descriptions"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DescriptionsallMeasureschema_Descriptions_TDescriptions_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DescriptionsallMeasureschema_Descriptions_TDescriptions_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DescriptionsallMeasureschema_Descriptions_TDescriptions_ instance.
func (me *XsdGoPkgHasElems_DescriptionsallMeasureschema_Descriptions_TDescriptions_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DescriptionsallMeasureschema_Descriptions_TDescriptions_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Descriptionses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_ struct {
	ProductMultimediaObject *TProductMultimediaObject `xml:"ProductMultimediaObject"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_ instance.
func (me *XsdGoPkgHasElem_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductMultimediaObject.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_ struct {
	SummaryDescription *TSummaryDescription `xml:"SummaryDescription"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_ instance.
func (me *XsdGoPkgHasElem_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.SummaryDescription.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_ struct {
	ProductBulletGroup *TProductBulletGroup `xml:"ProductBulletGroup"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_ instance.
func (me *XsdGoPkgHasElem_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductBulletGroup.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_ struct {
	FeatureGroupsLists []*TFeatureGroupsList `xml:"FeatureGroupsList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_ instance.
func (me *XsdGoPkgHasElems_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureGroupsLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_ struct {
	ProductBulletsHtml *TProductBulletsHtml `xml:"ProductBullets_HTML"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_ instance.
func (me *XsdGoPkgHasElem_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductBulletsHtml.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_ struct {
	ReasonToBuy *TProductBullet `xml:"ReasonToBuy"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_ instance.
func (me *XsdGoPkgHasElem_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ReasonToBuy.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeaturesequenceProductFeatureschema_Feature_TFeature_ struct {
	Feature *TFeature `xml:"Feature"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeaturesequenceProductFeatureschema_Feature_TFeature_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeaturesequenceProductFeatureschema_Feature_TFeature_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeaturesequenceProductFeatureschema_Feature_TFeature_ instance.
func (me *XsdGoPkgHasElem_FeaturesequenceProductFeatureschema_Feature_TFeature_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeaturesequenceProductFeatureschema_Feature_TFeature_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Feature.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_Filesequencefilesschema_File_TxsdFilesSequenceFile_ struct {
	File *TxsdFilesSequenceFile `xml:"file"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_Filesequencefilesschema_File_TxsdFilesSequenceFile_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_Filesequencefilesschema_File_TxsdFilesSequenceFile_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_Filesequencefilesschema_File_TxsdFilesSequenceFile_ instance.
func (me *XsdGoPkgHasElem_Filesequencefilesschema_File_TxsdFilesSequenceFile_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_Filesequencefilesschema_File_TxsdFilesSequenceFile_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.File.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductsequenceProductRelatedschema_Product_TProductRelated_ struct {
	Product *TProductRelated `xml:"Product"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductsequenceProductRelatedschema_Product_TProductRelated_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductsequenceProductRelatedschema_Product_TProductRelated_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductsequenceProductRelatedschema_Product_TProductRelated_ instance.
func (me *XsdGoPkgHasElem_ProductsequenceProductRelatedschema_Product_TProductRelated_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductsequenceProductRelatedschema_Product_TProductRelated_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Product.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_ struct {
	ProductFamilySlogans *TProductFamilySlogans `xml:"ProductFamilySlogans"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_ instance.
func (me *XsdGoPkgHasElem_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductFamilySlogans.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_ struct {
	ProductRelated *TProductRelated `xml:"ProductRelated"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_ instance.
func (me *XsdGoPkgHasElem_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductRelated.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SEOsequenceSEOsschema_Seo_Tseo_ struct {
	Seo *Tseo `xml:"SEO"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SEOsequenceSEOsschema_Seo_Tseo_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SEOsequenceSEOsschema_Seo_Tseo_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SEOsequenceSEOsschema_Seo_Tseo_ instance.
func (me *XsdGoPkgHasElem_SEOsequenceSEOsschema_Seo_Tseo_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SEOsequenceSEOsschema_Seo_Tseo_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Seo.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Order_XsdtInteger_ struct {
	Order xsdt.Integer `xml:"Order,attr"`
}

type XsdGoPkgHasElem_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_ struct {
	StatisticQueryDateDataReport *TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport `xml:"StatisticQueryDateDataReport"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_ instance.
func (me *XsdGoPkgHasElem_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.StatisticQueryDateDataReport.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_ struct {
	ProductFamilySlogan *TName `xml:"ProductFamilySlogan"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_ instance.
func (me *XsdGoPkgHasElem_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductFamilySlogan.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_ struct {
	ReasonsToBuys []*TReasonsToBuy `xml:"ReasonsToBuy"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_ instance.
func (me *XsdGoPkgHasElems_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ReasonsToBuys {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_ struct {
	ProductDescription *TProductDescription `xml:"ProductDescription"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_ instance.
func (me *XsdGoPkgHasElem_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductDescription.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_ struct {
	Disclaimer *TDisclaimer `xml:"Disclaimer"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_ instance.
func (me *XsdGoPkgHasElem_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Disclaimer.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_CategorysequenceProductschema_Category_TCategory_ struct {
	Category *TCategory `xml:"Category"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_CategorysequenceProductschema_Category_TCategory_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_CategorysequenceProductschema_Category_TCategory_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_CategorysequenceProductschema_Category_TCategory_ instance.
func (me *XsdGoPkgHasElem_CategorysequenceProductschema_Category_TCategory_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_CategorysequenceProductschema_Category_TCategory_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Category.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Reversed_XsdtInteger_ struct {
	Reversed xsdt.Integer `xml:"Reversed,attr"`
}

type XsdGoPkgHasElems_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_ struct {
	StatisticQueryDatesListResponses []*TStatisticQueryDatesListResponse `xml:"StatisticQueryDatesListResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_ instance.
func (me *XsdGoPkgHasElems_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.StatisticQueryDatesListResponses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_NamesequenceFeatureschema_Name_TName_ struct {
	Name *TName `xml:"Name"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_NamesequenceFeatureschema_Name_TName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_NamesequenceFeatureschema_Name_TName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_NamesequenceFeatureschema_Name_TName_ instance.
func (me *XsdGoPkgHasElem_NamesequenceFeatureschema_Name_TName_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_NamesequenceFeatureschema_Name_TName_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Name.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_ struct {
	FeatureLogoCategorieses []*TFeatureLogoCategoriesList `xml:"FeatureLogoCategories"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_ instance.
func (me *XsdGoPkgHasElems_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureLogoCategorieses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_ struct {
	VirtualCategory *TVirtualCategory `xml:"VirtualCategory"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_ instance.
func (me *XsdGoPkgHasElem_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.VirtualCategory.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_ struct {
	ProductsComplaintResponses []*TProductsComplaintResponse `xml:"ProductsComplaintResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_ instance.
func (me *XsdGoPkgHasElems_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductsComplaintResponses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_ struct {
	ProductSeriesSlogans *TProductSeriesSlogans `xml:"ProductSeriesSlogans"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_ instance.
func (me *XsdGoPkgHasElem_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductSeriesSlogans.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DistributorListallResponseschema_DistributorList_TDistributorList_ struct {
	DistributorLists []*TDistributorList `xml:"DistributorList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DistributorListallResponseschema_DistributorList_TDistributorList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DistributorListallResponseschema_DistributorList_TDistributorList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DistributorListallResponseschema_DistributorList_TDistributorList_ instance.
func (me *XsdGoPkgHasElems_DistributorListallResponseschema_DistributorList_TDistributorList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DistributorListallResponseschema_DistributorList_TDistributorList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.DistributorLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_ struct {
	RestrictedValueses []*TRestrictedValues `xml:"RestrictedValues"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_ instance.
func (me *XsdGoPkgHasElems_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.RestrictedValueses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_ struct {
	ProductBundled *TProductBundled `xml:"ProductBundled"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_ instance.
func (me *XsdGoPkgHasElem_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductBundled.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_ struct {
	Distributor *TxsdDistributorListSequenceDistributor `xml:"Distributor"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_ instance.
func (me *XsdGoPkgHasElem_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Distributor.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_ struct {
	CustomerService *TCustomerService `xml:"CustomerService"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_ instance.
func (me *XsdGoPkgHasElem_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.CustomerService.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_LinesequenceBodyschema_Line_TxsdBodySequenceLine_ struct {
	Line *TxsdBodySequenceLine `xml:"Line"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_LinesequenceBodyschema_Line_TxsdBodySequenceLine_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_LinesequenceBodyschema_Line_TxsdBodySequenceLine_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_LinesequenceBodyschema_Line_TxsdBodySequenceLine_ instance.
func (me *XsdGoPkgHasElem_LinesequenceBodyschema_Line_TxsdBodySequenceLine_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_LinesequenceBodyschema_Line_TxsdBodySequenceLine_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Line.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_ struct {
	Responses []*TResponse `xml:"Response"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_ instance.
func (me *XsdGoPkgHasElems_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Responses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SignallMeasureschema_Sign_XsdtString_ struct {
	Signs []xsdt.String `xml:"Sign"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SignallMeasureschema_Sign_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SignallMeasureschema_Sign_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SignallMeasureschema_Sign_XsdtString_ instance.
func (me *XsdGoPkgHasElems_SignallMeasureschema_Sign_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SignallMeasureschema_Sign_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_ struct {
	FeatureValuesVocabulary *TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary `xml:"FeatureValuesVocabulary"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_ instance.
func (me *XsdGoPkgHasElem_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureValuesVocabulary.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_ struct {
	ProductsListLookups []*TProductsListLookup `xml:"ProductsListLookup"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_ instance.
func (me *XsdGoPkgHasElems_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductsListLookups {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_ struct {
	ParentProductFamily *TParentProductFamily `xml:"ParentProductFamily"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_ instance.
func (me *XsdGoPkgHasElem_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ParentProductFamily.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_ struct {
	ProductFeature *TProductFeature `xml:"ProductFeature"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_ instance.
func (me *XsdGoPkgHasElem_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductFeature.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_ struct {
	Body *TBody `xml:"Body"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_ instance.
func (me *XsdGoPkgHasElem_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Body.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureGroupsequenceCategoryFeatureGroupschema_FeatureGroup_TFeatureGroup_ struct {
	FeatureGroup *TFeatureGroup `xml:"FeatureGroup"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureGroupsequenceCategoryFeatureGroupschema_FeatureGroup_TFeatureGroup_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureGroupsequenceCategoryFeatureGroupschema_FeatureGroup_TFeatureGroup_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureGroupsequenceCategoryFeatureGroupschema_FeatureGroup_TFeatureGroup_ instance.
func (me *XsdGoPkgHasElem_FeatureGroupsequenceCategoryFeatureGroupschema_FeatureGroup_TFeatureGroup_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureGroupsequenceCategoryFeatureGroupschema_FeatureGroup_TFeatureGroup_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureGroup.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_ struct {
	FulltextProductsSearchResponses []*TFulltextProductsSearchResponse `xml:"FulltextProductsSearchResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_ instance.
func (me *XsdGoPkgHasElems_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FulltextProductsSearchResponses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_ struct {
	Uncatid xsdt.String `xml:"UNCATID"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElem_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_ instance.
func (me *XsdGoPkgHasElem_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_ struct {
	ProductPicture *TxsdProductGallerySequenceProductPicture `xml:"ProductPicture"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_ instance.
func (me *XsdGoPkgHasElem_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductPicture.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SuppliersListallResponseschema_SuppliersList_TSuppliersList_ struct {
	SuppliersLists []*TSuppliersList `xml:"SuppliersList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SuppliersListallResponseschema_SuppliersList_TSuppliersList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SuppliersListallResponseschema_SuppliersList_TSuppliersList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SuppliersListallResponseschema_SuppliersList_TSuppliersList_ instance.
func (me *XsdGoPkgHasElems_SuppliersListallResponseschema_SuppliersList_TSuppliersList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SuppliersListallResponseschema_SuppliersList_TSuppliersList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.SuppliersLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_ struct {
	CategoryFeaturesLists []*TCategoryFeaturesList `xml:"CategoryFeaturesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_ instance.
func (me *XsdGoPkgHasElems_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.CategoryFeaturesLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_ struct {
	DescribeProductResponse *TxsdDescribeProductsResponseSequenceDescribeProductResponse `xml:"DescribeProductResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_ instance.
func (me *XsdGoPkgHasElem_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.DescribeProductResponse.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_ struct {
	LongSummaryDescriptions []*TSummaryDescriptionAttr `xml:"LongSummaryDescription"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_ instance.
func (me *XsdGoPkgHasElems_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.LongSummaryDescriptions {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_ struct {
	ProductSeriesSlogan *TName `xml:"ProductSeriesSlogan"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_ instance.
func (me *XsdGoPkgHasElem_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductSeriesSlogan.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_ struct {
	VirtualCategorieses []*TVirtualCategories `xml:"VirtualCategories"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_ instance.
func (me *XsdGoPkgHasElems_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.VirtualCategorieses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_ struct {
	StatisticQueryDateDataReportResponses []*TStatisticQueryDateDataReportResponse `xml:"StatisticQueryDateDataReportResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_ instance.
func (me *XsdGoPkgHasElems_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.StatisticQueryDateDataReportResponses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_KeywordssequenceCategoryschema_Keywords_TKeywords_ struct {
	Keywords *TKeywords `xml:"Keywords"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_KeywordssequenceCategoryschema_Keywords_TKeywords_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_KeywordssequenceCategoryschema_Keywords_TKeywords_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_KeywordssequenceCategoryschema_Keywords_TKeywords_ instance.
func (me *XsdGoPkgHasElem_KeywordssequenceCategoryschema_Keywords_TKeywords_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_KeywordssequenceCategoryschema_Keywords_TKeywords_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Keywords.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_ struct {
	CategoryFeatureGroup *TCategoryFeatureGroup `xml:"CategoryFeatureGroup"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_ instance.
func (me *XsdGoPkgHasElem_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.CategoryFeatureGroup.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_ struct {
	LocalValue *TLocalValue `xml:"LocalValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_ instance.
func (me *XsdGoPkgHasElem_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.LocalValue.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SignsallMeasureschema_Signs_TSigns_ struct {
	Signses []*TSigns `xml:"Signs"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SignsallMeasureschema_Signs_TSigns_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SignsallMeasureschema_Signs_TSigns_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SignsallMeasureschema_Signs_TSigns_ instance.
func (me *XsdGoPkgHasElems_SignsallMeasureschema_Signs_TSigns_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SignsallMeasureschema_Signs_TSigns_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Signses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_ struct {
	Country *TxsdCountriesSequenceCountry `xml:"Country"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_ instance.
func (me *XsdGoPkgHasElem_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Country.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_ struct {
	SupplierProductFamiliesLists []*TSupplierProductFamiliesList `xml:"SupplierProductFamiliesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_ instance.
func (me *XsdGoPkgHasElems_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.SupplierProductFamiliesLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductsequenceProductRelatedschema_Product_TProductRelated_ struct {
	Products []*TProductRelated `xml:"Product"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductsequenceProductRelatedschema_Product_TProductRelated_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductsequenceProductRelatedschema_Product_TProductRelated_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductsequenceProductRelatedschema_Product_TProductRelated_ instance.
func (me *XsdGoPkgHasElems_ProductsequenceProductRelatedschema_Product_TProductRelated_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductsequenceProductRelatedschema_Product_TProductRelated_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Products {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_ struct {
	DescribeProductsResponses []*TDescribeProductsResponse `xml:"DescribeProductsResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_ instance.
func (me *XsdGoPkgHasElems_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.DescribeProductsResponses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_ struct {
	ParentCategories []*TParentCategory `xml:"ParentCategory"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_ instance.
func (me *XsdGoPkgHasElems_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ParentCategories {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_LanguagesequenceLanguageListschema_Language_TLanguage_ struct {
	Language *TLanguage `xml:"Language"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_LanguagesequenceLanguageListschema_Language_TLanguage_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_LanguagesequenceLanguageListschema_Language_TLanguage_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_LanguagesequenceLanguageListschema_Language_TLanguage_ instance.
func (me *XsdGoPkgHasElem_LanguagesequenceLanguageListschema_Language_TLanguage_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_LanguagesequenceLanguageListschema_Language_TLanguage_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Language.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_LanguageListallResponseschema_LanguageList_TLanguageList_ struct {
	LanguageLists []*TLanguageList `xml:"LanguageList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_LanguageListallResponseschema_LanguageList_TLanguageList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_LanguageListallResponseschema_LanguageList_TLanguageList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_LanguageListallResponseschema_LanguageList_TLanguageList_ instance.
func (me *XsdGoPkgHasElems_LanguageListallResponseschema_LanguageList_TLanguageList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_LanguageListallResponseschema_LanguageList_TLanguageList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.LanguageLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SignsequenceSignsschema_Sign_TSign_ struct {
	Sign *TSign `xml:"Sign"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SignsequenceSignsschema_Sign_TSign_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SignsequenceSignsschema_Sign_TSign_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SignsequenceSignsschema_Sign_TSign_ instance.
func (me *XsdGoPkgHasElem_SignsequenceSignsschema_Sign_TSign_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SignsequenceSignsschema_Sign_TSign_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Sign.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_EANCodesequenceProductschema_EANCode_TEANCode_ struct {
	EANCode *TEANCode `xml:"EANCode"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_EANCodesequenceProductschema_EANCode_TEANCode_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_EANCodesequenceProductschema_EANCode_TEANCode_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_EANCodesequenceProductschema_EANCode_TEANCode_ instance.
func (me *XsdGoPkgHasElem_EANCodesequenceProductschema_EANCode_TEANCode_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_EANCodesequenceProductschema_EANCode_TEANCode_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.EANCode.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_ struct {
	MultimediaObject *TxsdProductMultimediaObjectSequenceMultimediaObject `xml:"MultimediaObject"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_ instance.
func (me *XsdGoPkgHasElem_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.MultimediaObject.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureValuesequenceFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_ struct {
	FeatureValue *TFeatureValue `xml:"FeatureValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureValuesequenceFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureValuesequenceFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureValuesequenceFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_ instance.
func (me *XsdGoPkgHasElem_FeatureValuesequenceFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureValuesequenceFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureValue.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_ struct {
	FeatureLogoCategory *TFeatureLogoCategory `xml:"FeatureLogoCategory"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_ instance.
func (me *XsdGoPkgHasElem_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureLogoCategory.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_ struct {
	FeatureLogo *TFeatureLogo `xml:"FeatureLogo"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_ instance.
func (me *XsdGoPkgHasElem_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureLogo.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_ struct {
	Disclaimerses []*TDisclaimers `xml:"Disclaimers"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_ instance.
func (me *XsdGoPkgHasElems_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.Disclaimerses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_ struct {
	StatisticQuery *TStatisticQuery `xml:"StatisticQuery"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_ instance.
func (me *XsdGoPkgHasElem_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.StatisticQuery.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_DescriptionsequenceDescriptionsschema_Description_TDescription_ struct {
	Description *TDescription `xml:"Description"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_DescriptionsequenceDescriptionsschema_Description_TDescription_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_DescriptionsequenceDescriptionsschema_Description_TDescription_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_DescriptionsequenceDescriptionsschema_Description_TDescription_ instance.
func (me *XsdGoPkgHasElem_DescriptionsequenceDescriptionsschema_Description_TDescription_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_DescriptionsequenceDescriptionsschema_Description_TDescription_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Description.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SEOssequenceProductschema_SEOs_TSEOs_ struct {
	SEOses []*TSEOs `xml:"SEOs"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SEOssequenceProductschema_SEOs_TSEOs_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SEOssequenceProductschema_SEOs_TSEOs_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SEOssequenceProductschema_SEOs_TSEOs_ instance.
func (me *XsdGoPkgHasElems_SEOssequenceProductschema_SEOs_TSEOs_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SEOssequenceProductschema_SEOs_TSEOs_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.SEOses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_ struct {
	FeatureValuesVocabularyLists []*TFeatureValuesVocabularyList `xml:"FeatureValuesVocabularyList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_ instance.
func (me *XsdGoPkgHasElems_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureValuesVocabularyLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_MeasuresListallResponseschema_MeasuresList_TMeasuresList_ struct {
	MeasuresLists []*TMeasuresList `xml:"MeasuresList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_MeasuresListallResponseschema_MeasuresList_TMeasuresList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_MeasuresListallResponseschema_MeasuresList_TMeasuresList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_MeasuresListallResponseschema_MeasuresList_TMeasuresList_ instance.
func (me *XsdGoPkgHasElems_MeasuresListallResponseschema_MeasuresList_TMeasuresList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_MeasuresListallResponseschema_MeasuresList_TMeasuresList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.MeasuresLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_ struct {
	ProductBulletsHTMLses []*TProductBulletsHTMLs `xml:"ProductBullets_HTMLs"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_ instance.
func (me *XsdGoPkgHasElems_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductBulletsHTMLses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_ struct {
	StatisticQueryDate *TStatisticQueryDate `xml:"StatisticQueryDate"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_ instance.
func (me *XsdGoPkgHasElem_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.StatisticQueryDate.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_ struct {
	StatisticQueryListResponses []*TStatisticQueryListResponse `xml:"StatisticQueryListResponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_ instance.
func (me *XsdGoPkgHasElems_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.StatisticQueryListResponses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_ struct {
	ProductGallery *TProductGallery `xml:"ProductGallery"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_ instance.
func (me *XsdGoPkgHasElem_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductGallery.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_ struct {
	SupplierCategoriesLists []*TSupplierCategoriesList `xml:"SupplierCategoriesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_ instance.
func (me *XsdGoPkgHasElems_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.SupplierCategoriesLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_CategoriesListallResponseschema_CategoriesList_TCategoriesList_ struct {
	CategoriesLists []*TCategoriesList `xml:"CategoriesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_CategoriesListallResponseschema_CategoriesList_TCategoriesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_CategoriesListallResponseschema_CategoriesList_TCategoriesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_CategoriesListallResponseschema_CategoriesList_TCategoriesList_ instance.
func (me *XsdGoPkgHasElems_CategoriesListallResponseschema_CategoriesList_TCategoriesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_CategoriesListallResponseschema_CategoriesList_TCategoriesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.CategoriesLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeaturesListallResponseschema_FeaturesList_TFeaturesList_ struct {
	FeaturesLists []*TFeaturesList `xml:"FeaturesList"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeaturesListallResponseschema_FeaturesList_TFeaturesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeaturesListallResponseschema_FeaturesList_TFeaturesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeaturesListallResponseschema_FeaturesList_TFeaturesList_ instance.
func (me *XsdGoPkgHasElems_FeaturesListallResponseschema_FeaturesList_TFeaturesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeaturesListallResponseschema_FeaturesList_TFeaturesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeaturesLists {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasAttr_Preferred_XsdtInteger_ struct {
	Preferred xsdt.Integer `xml:"Preferred,attr"`
}

type XsdGoPkgHasElems_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_ struct {
	ProductsStatistics []*TProductsStatistic `xml:"ProductsStatistic"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_ instance.
func (me *XsdGoPkgHasElems_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductsStatistics {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_SeriessequenceProductFamilyschema_Series_TSeries_ struct {
	Series *TSeries `xml:"Series"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_SeriessequenceProductFamilyschema_Series_TSeries_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_SeriessequenceProductFamilyschema_Series_TSeries_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_SeriessequenceProductFamilyschema_Series_TSeries_ instance.
func (me *XsdGoPkgHasElem_SeriessequenceProductFamilyschema_Series_TSeries_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_SeriessequenceProductFamilyschema_Series_TSeries_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.Series.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_ struct {
	ShortSummaryDescriptions []*TSummaryDescriptionAttr `xml:"ShortSummaryDescription"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_ instance.
func (me *XsdGoPkgHasElems_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ShortSummaryDescriptions {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_ struct {
	FeatureLogoValue *TFeatureLogoValue `xml:"FeatureLogoValue"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_ instance.
func (me *XsdGoPkgHasElem_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.FeatureLogoValue.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_ struct {
	ProductBulletses []*TProductBullets `xml:"ProductBullets"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_ instance.
func (me *XsdGoPkgHasElems_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.ProductBulletses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_ struct {
	ProductComplaintReponse *TxsdProductsComplaintResponseSequenceProductComplaintReponse `xml:"ProductComplaintReponse"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_ instance.
func (me *XsdGoPkgHasElem_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductComplaintReponse.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElem_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_ struct {
	ProductBullet *TProductBullet `xml:"ProductBullet"`
}

//	If the WalkHandlers.XsdGoPkgHasElem_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElem_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 1/1 field(s) belonging to this XsdGoPkgHasElem_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_ instance.
func (me *XsdGoPkgHasElem_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElem_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if err = me.ProductBullet.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
			return
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

type XsdGoPkgHasElems_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_ struct {
	FeatureLogoValueses []*TFeatureValuesList `xml:"FeatureLogoValues"`
}

//	If the WalkHandlers.XsdGoPkgHasElems_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_ function is not nil (ie. was set by outside code), calls it with this XsdGoPkgHasElems_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_ instance as the single argument. Then calls the Walk() method on 0/0 embed(s) and 0/1 field(s) belonging to this XsdGoPkgHasElems_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_ instance.
func (me *XsdGoPkgHasElems_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_) Walk() (err error) {
	if fn := WalkHandlers.XsdGoPkgHasElems_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_; me != nil {
		if fn != nil {
			if err = fn(me, true); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		for _, x := range me.FeatureLogoValueses {
			if err = x.Walk(); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
		if fn != nil {
			if err = fn(me, false); xsdt.OnWalkError(&err, &WalkErrors, WalkContinueOnError, WalkOnError) {
				return
			}
		}
	}
	return
}

var (
	//	Set this to false to break a Walk() immediately as soon as the first error is returned by a custom handler function.
	//	If true, Walk() proceeds and accumulates all errors in the WalkErrors slice.
	WalkContinueOnError = true
	//	Contains all errors accumulated during Walk()s. If you're using this, you need to reset this yourself as needed prior to a fresh Walk().
	WalkErrors []error
	//	Your custom error-handling function, if required.
	WalkOnError func(error)
	//	Provides 283 strong-typed hooks for your own custom handler functions to be invoked when the Walk() method is called on any instance of any (non-attribute-related) struct type defined in this package.
	//	If your custom handler does get called at all for a given struct instance, then it always gets called twice, first with the 'enter' bool argument set to true, then (after having Walk()ed all subordinate struct instances, if any) once again with it set to false.
	WalkHandlers = &XsdGoPkgWalkHandlers{}
)

//	Provides 283 strong-typed hooks for your own custom handler functions to be invoked when the Walk() method is called on any instance of any (non-attribute-related) struct type defined in this package.
//	If your custom handler does get called at all for a given struct instance, then it always gets called twice, first with the 'enter' bool argument set to true, then (after having Walk()ed all subordinate struct instances, if any) once again with it set to false.
type XsdGoPkgWalkHandlers struct {
	TSuppliersList                                                                                                                                                                                             func(*TSuppliersList, bool) error
	TFeatureValuesVocabularyList                                                                                                                                                                               func(*TFeatureValuesVocabularyList, bool) error
	TVirtualCategory                                                                                                                                                                                           func(*TVirtualCategory, bool) error
	XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_                                                                                                              func(*XsdGoPkgHasElem_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_, bool) error
	TSupplierProductFamiliesList                                                                                                                                                                               func(*TSupplierProductFamiliesList, bool) error
	XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_                                                                                                                                  func(*XsdGoPkgHasElem_LanguageListallResponseschema_LanguageList_TLanguageList_, bool) error
	XsdGoPkgHasElems_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_                                                                        func(*XsdGoPkgHasElems_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_, bool) error
	XsdGoPkgHasElems_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_                                                                                                               func(*XsdGoPkgHasElems_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_, bool) error
	XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_                                                                                                                           func(*XsdGoPkgHasElems_DescriptionsequenceDescriptionsschema_Description_TDescription_, bool) error
	XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_                                                                                               func(*XsdGoPkgHasElems_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_, bool) error
	XsdGoPkgHasElems_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_                                                                                    func(*XsdGoPkgHasElems_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_, bool) error
	XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_                                                                                                                                     func(*XsdGoPkgHasElems_FeaturesequenceProductFeatureschema_Feature_TFeature_, bool) error
	XsdGoPkgHasElem_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_                                                                                                func(*XsdGoPkgHasElem_ProductBulletsHTMLsequenceProductBulletsHTMLsschema_ProductBulletsHtml_TProductBulletsHtml_, bool) error
	XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_                                      func(*XsdGoPkgHasElems_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_, bool) error
	XsdGoPkgHasElem_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_                                                                                                            func(*XsdGoPkgHasElem_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_, bool) error
	XsdGoPkgHasElems_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_                                                                                                        func(*XsdGoPkgHasElems_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_, bool) error
	TProductFamilySlogans                                                                                                                                                                                      func(*TProductFamilySlogans, bool) error
	XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_            func(*XsdGoPkgHasElems_FeatureValuesequenceTxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabularyFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_, bool) error
	XsdGoPkgHasElems_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_                                                                                                   func(*XsdGoPkgHasElems_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_, bool) error
	XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_                                                                                                                            func(*XsdGoPkgHasElems_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_, bool) error
	XsdGoPkgHasElem_LanguagesequenceLanguageListschema_Language_TLanguage_                                                                                                                                     func(*XsdGoPkgHasElem_LanguagesequenceLanguageListschema_Language_TLanguage_, bool) error
	XsdGoPkgHasElems_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_                                                                                                                  func(*XsdGoPkgHasElems_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_, bool) error
	XsdGoPkgHasCdata                                                                                                                                                                                           func(*XsdGoPkgHasCdata, bool) error
	XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_                                                                                                                                                        func(*XsdGoPkgHasElem_NamesallMeasureschema_Names_TNames_, bool) error
	XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_                                                                                                                                  func(*XsdGoPkgHasElem_FeaturesListallResponseschema_FeaturesList_TFeaturesList_, bool) error
	XsdGoPkgHasElem_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_                                                                                                                     func(*XsdGoPkgHasElem_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_, bool) error
	XsdGoPkgHasElems_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_                                                                                          func(*XsdGoPkgHasElems_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_, bool) error
	TDisclaimer                                                                                                                                                                                                func(*TDisclaimer, bool) error
	XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_                                                                                                                    func(*XsdGoPkgHasElems_RestrictedValuesequenceFeatureschema_RestrictedValue_TRestrictedValue_, bool) error
	XsdGoPkgHasElem_ProductsequenceProductRelatedschema_Product_TProductRelated_                                                                                                                               func(*XsdGoPkgHasElem_ProductsequenceProductRelatedschema_Product_TProductRelated_, bool) error
	XsdGoPkgHasElems_SignsallMeasureschema_Signs_TSigns_                                                                                                                                                       func(*XsdGoPkgHasElems_SignsallMeasureschema_Signs_TSigns_, bool) error
	XsdGoPkgHasElem_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_                                                                                                        func(*XsdGoPkgHasElem_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_, bool) error
	TProduct                                                                                                                                                                                                   func(*TProduct, bool) error
	XsdGoPkgHasElem_FeaturesequenceProductFeatureschema_Feature_TFeature_                                                                                                                                      func(*XsdGoPkgHasElem_FeaturesequenceProductFeatureschema_Feature_TFeature_, bool) error
	XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_                                                                                                                           func(*XsdGoPkgHasElem_ProductFamilysequenceProductschema_ProductFamily_TProductFamily_, bool) error
	XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_                                                                                              func(*XsdGoPkgHasElem_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_, bool) error
	XsdGoPkgHasElem_CategorysequenceProductschema_Category_TCategory_                                                                                                                                          func(*XsdGoPkgHasElem_CategorysequenceProductschema_Category_TCategory_, bool) error
	XsdGoPkgHasElems_SignallMeasureschema_Sign_XsdtString_                                                                                                                                                     func(*XsdGoPkgHasElems_SignallMeasureschema_Sign_XsdtString_, bool) error
	XsdGoPkgHasElems_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_                                                                                         func(*XsdGoPkgHasElems_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_, bool) error
	XsdGoPkgHasElems_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_                                                                                                                  func(*XsdGoPkgHasElems_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_, bool) error
	XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_                                                                                                               func(*XsdGoPkgHasElems_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_, bool) error
	XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_                                                                                                          func(*XsdGoPkgHasElems_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_, bool) error
	XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_                                                                                                      func(*XsdGoPkgHasElems_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_, bool) error
	TCategoryFeatureGroup                                                                                                                                                                                      func(*TCategoryFeatureGroup, bool) error
	XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_                                                                                                                       func(*XsdGoPkgHasElem_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_, bool) error
	XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_                                                                         func(*XsdGoPkgHasElem_StatisticQueryDatesListResponseallResponseschema_StatisticQueryDatesListResponse_TStatisticQueryDatesListResponse_, bool) error
	XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_                                                                                                                                func(*XsdGoPkgHasElems_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_, bool) error
	XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_                                                                                                          func(*XsdGoPkgHasElems_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_, bool) error
	TVirtualCategories                                                                                                                                                                                         func(*TVirtualCategories, bool) error
	XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_                                                                                                                         func(*XsdGoPkgHasElems_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_, bool) error
	TxsdCountriesSequenceCountry                                                                                                                                                                               func(*TxsdCountriesSequenceCountry, bool) error
	XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_                                                                                      func(*XsdGoPkgHasElems_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_, bool) error
	XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_                                                                                                       func(*XsdGoPkgHasElems_FeatureLogoValuesequenceFeatureValuesListschema_FeatureLogoValue_TFeatureLogoValue_, bool) error
	XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_                                                                                                    func(*XsdGoPkgHasElems_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_, bool) error
	XsdGoPkgHasElem_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_                                                                                                                        func(*XsdGoPkgHasElem_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_, bool) error
	XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_                                                                                                                                                func(*XsdGoPkgHasElems_NamesequenceFeatureGroupschema_Name_TName_, bool) error
	XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_                                                                                                                               func(*XsdGoPkgHasElems_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_, bool) error
	XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_                                  func(*XsdGoPkgHasElems_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_, bool) error
	TProductsComplaintResponse                                                                                                                                                                                 func(*TProductsComplaintResponse, bool) error
	XsdGoPkgHasElem_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_                                                                                                           func(*XsdGoPkgHasElem_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_, bool) error
	XsdGoPkgHasElem_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_                                                                                                                                          func(*XsdGoPkgHasElem_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_, bool) error
	XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_                                                                                                                       func(*XsdGoPkgHasElems_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_, bool) error
	TProductsListLookup                                                                                                                                                                                        func(*TProductsListLookup, bool) error
	XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_                                                                                                           func(*XsdGoPkgHasElems_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_, bool) error
	TEANCode                                                                                                                                                                                                   func(*TEANCode, bool) error
	XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_                                                                                                                       func(*XsdGoPkgHasElems_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_, bool) error
	XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_                                                                                                                                        func(*XsdGoPkgHasElems_KeywordssequenceCategoryschema_Keywords_TKeywords_, bool) error
	XsdGoPkgHasElems_LanguageListallResponseschema_LanguageList_TLanguageList_                                                                                                                                 func(*XsdGoPkgHasElems_LanguageListallResponseschema_LanguageList_TLanguageList_, bool) error
	TSummaryDescriptionAttr                                                                                                                                                                                    func(*TSummaryDescriptionAttr, bool) error
	XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_                                                                                          func(*XsdGoPkgHasElem_LongSummaryDescriptionallSummaryDescriptionschema_LongSummaryDescription_TSummaryDescriptionAttr_, bool) error
	XsdGoPkgHasElem_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_                                                                                                           func(*XsdGoPkgHasElem_ProductSeriesSlogansequenceProductSeriesSlogansschema_ProductSeriesSlogan_TName_, bool) error
	TProductBulletsHtml                                                                                                                                                                                        func(*TProductBulletsHtml, bool) error
	TxsdDescribeProductsResponseSequenceDescribeProductResponse                                                                                                                                                func(*TxsdDescribeProductsResponseSequenceDescribeProductResponse, bool) error
	XsdGoPkgHasElems_DistributorListallResponseschema_DistributorList_TDistributorList_                                                                                                                        func(*XsdGoPkgHasElems_DistributorListallResponseschema_DistributorList_TDistributorList_, bool) error
	XsdGoPkgHasElem_FeatureValuesequenceFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_                                                                           func(*XsdGoPkgHasElem_FeatureValuesequenceFeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValue_TFeatureValue_, bool) error
	XsdGoPkgHasElem_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_                                                                                                     func(*XsdGoPkgHasElem_StatisticQuerysequenceStatisticQueryListResponseschema_StatisticQuery_TStatisticQuery_, bool) error
	TCategoryFeaturesList                                                                                                                                                                                      func(*TCategoryFeaturesList, bool) error
	XsdGoPkgHasElems_DescriptionsallMeasureschema_Descriptions_TDescriptions_                                                                                                                                  func(*XsdGoPkgHasElems_DescriptionsallMeasureschema_Descriptions_TDescriptions_, bool) error
	TStatisticQuery                                                                                                                                                                                            func(*TStatisticQuery, bool) error
	XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_                                                                                   func(*XsdGoPkgHasElems_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_, bool) error
	TProductBullets                                                                                                                                                                                            func(*TProductBullets, bool) error
	XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_                                                                                                                                         func(*XsdGoPkgHasElems_CategorysequenceProductschema_Category_TCategory_, bool) error
	TFeatureLogoCategoriesList                                                                                                                                                                                 func(*TFeatureLogoCategoriesList, bool) error
	XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_                                                                                                      func(*XsdGoPkgHasElems_ProductFamilysequenceSupplierProductFamiliesListschema_ProductFamily_TProductFamily_, bool) error
	XsdGoPkgHasElem_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_                                                                                                func(*XsdGoPkgHasElem_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_, bool) error
	XsdGoPkgHasElem_SEOsequenceSEOsschema_Seo_Tseo_                                                                                                                                                            func(*XsdGoPkgHasElem_SEOsequenceSEOsschema_Seo_Tseo_, bool) error
	XsdGoPkgHasElems_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_                                                                                       func(*XsdGoPkgHasElems_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_, bool) error
	TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport                                                                                                                               func(*TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport, bool) error
	XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_                                                                                                                                          func(*XsdGoPkgHasElem_MeasuresequenceLocalValueschema_Measure_TMeasure_, bool) error
	XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_                                                                                                                func(*XsdGoPkgHasElem_ProductsListLookupallResponseschema_ProductsListLookup_TProductsListLookup_, bool) error
	XsdGoPkgHasElem_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_                                   func(*XsdGoPkgHasElem_FeatureValuesVocabularysequenceFeatureValuesVocabularyListschema_FeatureValuesVocabulary_TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary_, bool) error
	XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_                                                                                                                  func(*XsdGoPkgHasElem_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_, bool) error
	XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_                                                                                                  func(*XsdGoPkgHasElems_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_, bool) error
	TProductBundled                                                                                                                                                                                            func(*TProductBundled, bool) error
	XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_                                                                                                                                     func(*XsdGoPkgHasElems_CountriessequenceLanguageschema_Countries_TCountries_, bool) error
	TSummaryDescription                                                                                                                                                                                        func(*TSummaryDescription, bool) error
	XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_                                                                                                                                            func(*XsdGoPkgHasElems_EANCodesequenceProductschema_EANCode_TEANCode_, bool) error
	TDescriptions                                                                                                                                                                                              func(*TDescriptions, bool) error
	XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_                                                                                                                       func(*XsdGoPkgHasElems_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_, bool) error
	TProductMultimediaObject                                                                                                                                                                                   func(*TProductMultimediaObject, bool) error
	TFeatureValue                                                                                                                                                                                              func(*TFeatureValue, bool) error
	XsdGoPkgHasElems_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_                                                                                                         func(*XsdGoPkgHasElems_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_, bool) error
	XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_                                                                                        func(*XsdGoPkgHasElem_ShortSummaryDescriptionallSummaryDescriptionschema_ShortSummaryDescription_TSummaryDescriptionAttr_, bool) error
	XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_                                                                                                                                 func(*XsdGoPkgHasElem_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_, bool) error
	XsdGoPkgHasElems_ProductsequenceProductRelatedschema_Product_TProductRelated_                                                                                                                              func(*XsdGoPkgHasElems_ProductsequenceProductRelatedschema_Product_TProductRelated_, bool) error
	XsdGoPkgHasElem_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_                                                                                                                func(*XsdGoPkgHasElem_ProductBulletsequenceProductBulletGroupschema_ProductBullet_TProductBullet_, bool) error
	TParentCategory                                                                                                                                                                                            func(*TParentCategory, bool) error
	XsdGoPkgHasElem_LinesequenceBodyschema_Line_TxsdBodySequenceLine_                                                                                                                                          func(*XsdGoPkgHasElem_LinesequenceBodyschema_Line_TxsdBodySequenceLine_, bool) error
	TCategoriesList                                                                                                                                                                                            func(*TCategoriesList, bool) error
	XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_                                                                                                      func(*XsdGoPkgHasElems_ProductsListsequenceFulltextProductsSearchResponseschema_ProductsList_TProductsList_, bool) error
	XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_                                                                                                                      func(*XsdGoPkgHasElems_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_, bool) error
	XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_                                                                                                                         func(*XsdGoPkgHasElem_DistributorListallResponseschema_DistributorList_TDistributorList_, bool) error
	XsdGoPkgHasElem_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_                                                                                             func(*XsdGoPkgHasElem_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_, bool) error
	TLocalValue                                                                                                                                                                                                func(*TLocalValue, bool) error
	XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_                                                                                                         func(*XsdGoPkgHasElem_ProductBulletsHTMLssequenceProductschema_ProductBulletsHTMLs_TProductBulletsHTMLs_, bool) error
	XsdGoPkgHasElem_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_  func(*XsdGoPkgHasElem_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_, bool) error
	XsdGoPkgHasElem_NamesequenceFeatureschema_Name_TName_                                                                                                                                                      func(*XsdGoPkgHasElem_NamesequenceFeatureschema_Name_TName_, bool) error
	XsdGoPkgHasElems_SuppliersListallResponseschema_SuppliersList_TSuppliersList_                                                                                                                              func(*XsdGoPkgHasElems_SuppliersListallResponseschema_SuppliersList_TSuppliersList_, bool) error
	XsdGoPkgHasElem_SignsequenceSignsschema_Sign_TSign_                                                                                                                                                        func(*XsdGoPkgHasElem_SignsequenceSignsschema_Sign_TSign_, bool) error
	TxsdBodySequenceLine                                                                                                                                                                                       func(*TxsdBodySequenceLine, bool) error
	TFulltextProductsSearchResponse                                                                                                                                                                            func(*TFulltextProductsSearchResponse, bool) error
	TProductBullet                                                                                                                                                                                             func(*TProductBullet, bool) error
	XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_                                                                                                                                         func(*XsdGoPkgHasElems_SeriessequenceProductFamilyschema_Series_TSeries_, bool) error
	XsdGoPkgHasElem_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_                                                                                                           func(*XsdGoPkgHasElem_ProductFamilySlogansequenceProductFamilySlogansschema_ProductFamilySlogan_TName_, bool) error
	XsdGoPkgHasElem_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_                                                                                    func(*XsdGoPkgHasElem_StatisticQueryDatesequenceStatisticQueryDatesListResponseschema_StatisticQueryDate_TStatisticQueryDate_, bool) error
	TProductGallery                                                                                                                                                                                            func(*TProductGallery, bool) error
	TMeasuresList                                                                                                                                                                                              func(*TMeasuresList, bool) error
	XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_                                                                                                                              func(*XsdGoPkgHasElem_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_, bool) error
	XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_                                                                                     func(*XsdGoPkgHasElem_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_, bool) error
	TDistributorList                                                                                                                                                                                           func(*TDistributorList, bool) error
	XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_        func(*XsdGoPkgHasElems_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_, bool) error
	XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_                                                                                                                                                      func(*XsdGoPkgHasElem_SEOssequenceProductschema_SEOs_TSEOs_, bool) error
	XsdGoPkgHasElem_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_         func(*XsdGoPkgHasElem_BodysequenceTxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReportStatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_Body_TBody_, bool) error
	TxsdDistributorListSequenceDistributor                                                                                                                                                                     func(*TxsdDistributorListSequenceDistributor, bool) error
	XsdGoPkgHasElem_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_                                                                                                                        func(*XsdGoPkgHasElem_ProductBundledsequenceProductschema_ProductBundled_TProductBundled_, bool) error
	TxsdProductMultimediaObjectSequenceMultimediaObject                                                                                                                                                        func(*TxsdProductMultimediaObjectSequenceMultimediaObject, bool) error
	TSupplierCategoriesList                                                                                                                                                                                    func(*TSupplierCategoriesList, bool) error
	XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_                                                                                                                                   func(*XsdGoPkgHasElems_SuppliersequenceProductFamilyschema_Supplier_TSupplier_, bool) error
	TProductDescription                                                                                                                                                                                        func(*TProductDescription, bool) error
	TDisclaimers                                                                                                                                                                                               func(*TDisclaimers, bool) error
	XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_                                                                                                          func(*XsdGoPkgHasElem_CategoryFeaturesListallResponseschema_CategoryFeaturesList_TCategoryFeaturesList_, bool) error
	TProductsStatistic                                                                                                                                                                                         func(*TProductsStatistic, bool) error
	XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_                                                                                                                   func(*XsdGoPkgHasElem_ProductsStatisticallResponseschema_ProductsStatistic_TProductsStatistic_, bool) error
	XsdGoPkgHasElems_Files                                                                                                                                                                                     func(*XsdGoPkgHasElems_Files, bool) error
	XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_                                                                                                                                          func(*XsdGoPkgHasElem_SuppliersequenceProductschema_Supplier_TSupplier_, bool) error
	TStatisticQueryDatesListResponse                                                                                                                                                                           func(*TStatisticQueryDatesListResponse, bool) error
	XsdGoPkgHasElem_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_                                                                                                                        func(*XsdGoPkgHasElem_ProductFeaturesequenceProductschema_ProductFeature_TProductFeature_, bool) error
	XsdGoPkgHasElem_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_                                                                                        func(*XsdGoPkgHasElem_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_, bool) error
	TxsdFiles                                                                                                                                                                                                  func(*TxsdFiles, bool) error
	XsdGoPkgHasElem_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_                                                                                                     func(*XsdGoPkgHasElem_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_, bool) error
	XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_                                                                                                                                       func(*XsdGoPkgHasElems_MeasuresequenceMeasuresListschema_Measure_TMeasure_, bool) error
	TResponse                                                                                                                                                                                                  func(*TResponse, bool) error
	XsdGoPkgHasElem_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_                                                                                                                        func(*XsdGoPkgHasElem_ProductGallerysequenceProductschema_ProductGallery_TProductGallery_, bool) error
	XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_ func(*XsdGoPkgHasElems_StatisticQueryDateDataReportsequenceStatisticQueryDateDataReportResponseschema_StatisticQueryDateDataReport_TxsdStatisticQueryDateDataReportResponseSequenceStatisticQueryDateDataReport_, bool) error
	XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_                                                                                                                                 func(*XsdGoPkgHasElems_ProductsequenceProductsListLookupschema_Product_TProduct_, bool) error
	XsdGoPkgHasElems_CategoriesListallResponseschema_CategoriesList_TCategoriesList_                                                                                                                           func(*XsdGoPkgHasElems_CategoriesListallResponseschema_CategoriesList_TCategoriesList_, bool) error
	XsdGoPkgHasElem_Files                                                                                                                                                                                      func(*XsdGoPkgHasElem_Files, bool) error
	XsdGoPkgHasElem_FeatureGroupsequenceCategoryFeatureGroupschema_FeatureGroup_TFeatureGroup_                                                                                                                 func(*XsdGoPkgHasElem_FeatureGroupsequenceCategoryFeatureGroupschema_FeatureGroup_TFeatureGroup_, bool) error
	TCountries                                                                                                                                                                                                 func(*TCountries, bool) error
	XsdGoPkgHasElems_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_                                                                                               func(*XsdGoPkgHasElems_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_, bool) error
	XsdGoPkgHasElem_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_                                                                                                   func(*XsdGoPkgHasElem_ParentProductFamilysequenceProductFamilyschema_ParentProductFamily_TParentProductFamily_, bool) error
	XsdGoPkgHasElems_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_                                                                                                               func(*XsdGoPkgHasElems_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_, bool) error
	TFeature                                                                                                                                                                                                   func(*TFeature, bool) error
	TProductSeriesSlogans                                                                                                                                                                                      func(*TProductSeriesSlogans, bool) error
	TDescription                                                                                                                                                                                               func(*TDescription, bool) error
	TxsdProductGallerySequenceProductPicture                                                                                                                                                                   func(*TxsdProductGallerySequenceProductPicture, bool) error
	TLanguage                                                                                                                                                                                                  func(*TLanguage, bool) error
	XsdGoPkgHasElems_MeasuresListallResponseschema_MeasuresList_TMeasuresList_                                                                                                                                 func(*XsdGoPkgHasElems_MeasuresListallResponseschema_MeasuresList_TMeasuresList_, bool) error
	TCustomerService                                                                                                                                                                                           func(*TCustomerService, bool) error
	XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_                                                                                                           func(*XsdGoPkgHasElems_ProductDescriptionsequenceProductschema_ProductDescription_TProductDescription_, bool) error
	TCategory                                                                                                                                                                                                  func(*TCategory, bool) error
	XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_                                                               func(*XsdGoPkgHasElems_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_, bool) error
	XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_                                                                                                func(*XsdGoPkgHasElem_FeatureLogoCategoriesallFeatureLogoschema_FeatureLogoCategories_TFeatureLogoCategoriesList_, bool) error
	XsdGoPkgHasElem_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_                                                                                               func(*XsdGoPkgHasElem_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_, bool) error
	XsdGoPkgHasElems_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_                                                                                             func(*XsdGoPkgHasElems_DescribeProductsResponseallResponseschema_DescribeProductsResponse_TDescribeProductsResponse_, bool) error
	TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary                                                                                                                                             func(*TxsdFeatureValuesVocabularyListSequenceFeatureValuesVocabulary, bool) error
	XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_                                                                                                                                    func(*XsdGoPkgHasElems_LanguagesequenceLanguageListschema_Language_TLanguage_, bool) error
	TSign                                                                                                                                                                                                      func(*TSign, bool) error
	XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_                                                                                                                                   func(*XsdGoPkgHasElem_DescriptionsallMeasureschema_Descriptions_TDescriptions_, bool) error
	XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_                                                                                                                                                       func(*XsdGoPkgHasElems_SignsequenceSignsschema_Sign_TSign_, bool) error
	XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_                                                                                                                                         func(*XsdGoPkgHasElems_LinesequenceBodyschema_Line_TxsdBodySequenceLine_, bool) error
	TProductRelated                                                                                                                                                                                            func(*TProductRelated, bool) error
	TStatisticQueryDate                                                                                                                                                                                        func(*TStatisticQueryDate, bool) error
	TxsdProductsComplaintResponseSequenceProductComplaintReponse                                                                                                                                               func(*TxsdProductsComplaintResponseSequenceProductComplaintReponse, bool) error
	XsdGoPkgHasElem_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_                                                                                                     func(*XsdGoPkgHasElem_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_, bool) error
	TFeatureGroup                                                                                                                                                                                              func(*TFeatureGroup, bool) error
	XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_                                                                                                                            func(*XsdGoPkgHasElem_CategoriesListallResponseschema_CategoriesList_TCategoriesList_, bool) error
	XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_                                                                                            func(*XsdGoPkgHasElems_ProductMultimediaObjectsequenceProductschema_ProductMultimediaObject_TProductMultimediaObject_, bool) error
	XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_                                                                                                                                  func(*XsdGoPkgHasElem_ProductsListallResponseschema_ProductsList_TProductsList_, bool) error
	XsdGoPkgHasElem_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_                                                                                       func(*XsdGoPkgHasElem_FeatureLogoCategorysequenceFeatureLogoCategoriesListschema_FeatureLogoCategory_TFeatureLogoCategory_, bool) error
	XsdGoPkgHasElem_DescriptionsequenceDescriptionsschema_Description_TDescription_                                                                                                                            func(*XsdGoPkgHasElem_DescriptionsequenceDescriptionsschema_Description_TDescription_, bool) error
	TNames                                                                                                                                                                                                     func(*TNames, bool) error
	TProductFeature                                                                                                                                                                                            func(*TProductFeature, bool) error
	XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_                                                                                              func(*XsdGoPkgHasElems_DistributorsequenceDistributorListschema_Distributor_TxsdDistributorListSequenceDistributor_, bool) error
	XsdGoPkgHasElems_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_                                                         func(*XsdGoPkgHasElems_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_, bool) error
	XsdGoPkgHasElems_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_                                                                                                                       func(*XsdGoPkgHasElems_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_, bool) error
	TFeatureLogoCategory                                                                                                                                                                                       func(*TFeatureLogoCategory, bool) error
	TFeatureValuesList                                                                                                                                                                                         func(*TFeatureValuesList, bool) error
	TSupplier                                                                                                                                                                                                  func(*TSupplier, bool) error
	XsdGoPkgHasElem_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_                                                                                                                       func(*XsdGoPkgHasElem_CountrysequenceCountriesschema_Country_TxsdCountriesSequenceCountry_, bool) error
	TFeatureLogo                                                                                                                                                                                               func(*TFeatureLogo, bool) error
	XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_                                                                                                    func(*XsdGoPkgHasElem_SupplierCategoriesListallResponseschema_SupplierCategoriesList_TSupplierCategoriesList_, bool) error
	XsdGoPkgHasElems_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_                                                                                                                 func(*XsdGoPkgHasElems_RestrictedValuessequenceFeatureschema_RestrictedValues_TRestrictedValues_, bool) error
	XsdGoPkgHasElem_KeywordssequenceCategoryschema_Keywords_TKeywords_                                                                                                                                         func(*XsdGoPkgHasElem_KeywordssequenceCategoryschema_Keywords_TKeywords_, bool) error
	XsdGoPkgHasElems_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_                                                                                                                      func(*XsdGoPkgHasElems_ParentCategorysequenceCategoryschema_ParentCategory_TParentCategory_, bool) error
	TName                                                                                                                                                                                                      func(*TName, bool) error
	XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_                                                                                                    func(*XsdGoPkgHasElems_ProductBulletGroupsequenceProductBulletsschema_ProductBulletGroup_TProductBulletGroup_, bool) error
	TKeywords                                                                                                                                                                                                  func(*TKeywords, bool) error
	XsdGoPkgHasElem_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_                                                                                                            func(*XsdGoPkgHasElem_SummaryDescriptionsequenceProductschema_SummaryDescription_TSummaryDescription_, bool) error
	XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_                                                                                                                                                        func(*XsdGoPkgHasElem_SignsallMeasureschema_Signs_TSigns_, bool) error
	XsdGoPkgHasElems_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_                                                                                                                func(*XsdGoPkgHasElems_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_, bool) error
	XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_                                                                                                                       func(*XsdGoPkgHasElems_ProductRelatedsequenceProductschema_ProductRelated_TProductRelated_, bool) error
	XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_                                                                                           func(*XsdGoPkgHasElem_ProductsComplaintResponseallResponseschema_ProductsComplaintResponse_TProductsComplaintResponse_, bool) error
	XsdGoPkgHasElems_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_                                                                                    func(*XsdGoPkgHasElems_SupplierProductFamiliesListallResponseschema_SupplierProductFamiliesList_TSupplierProductFamiliesList_, bool) error
	XsdGoPkgHasElem_EANCodesequenceProductschema_EANCode_TEANCode_                                                                                                                                             func(*XsdGoPkgHasElem_EANCodesequenceProductschema_EANCode_TEANCode_, bool) error
	XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_                                                                                                                   func(*XsdGoPkgHasElems_FeatureGroupsequenceFeatureGroupsListschema_FeatureGroup_TFeatureGroup_, bool) error
	TSEOs                                                                                                                                                                                                      func(*TSEOs, bool) error
	XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_                                                                                       func(*XsdGoPkgHasElems_ProductPicturesequenceProductGalleryschema_ProductPicture_TxsdProductGallerySequenceProductPicture_, bool) error
	XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_                                                                                                                                         func(*XsdGoPkgHasElems_UNCATIDsequenceCategoryschema_Uncatid_XsdtString_, bool) error
	TProductBulletsHTMLs                                                                                                                                                                                       func(*TProductBulletsHTMLs, bool) error
	XsdGoPkgHasElems_IcecatInterface                                                                                                                                                                           func(*XsdGoPkgHasElems_IcecatInterface, bool) error
	XsdGoPkgHasElem_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_                                                                func(*XsdGoPkgHasElem_MultimediaObjectsequenceProductMultimediaObjectschema_MultimediaObject_TxsdProductMultimediaObjectSequenceMultimediaObject_, bool) error
	XsdGoPkgHasElems_FeaturesListallResponseschema_FeaturesList_TFeaturesList_                                                                                                                                 func(*XsdGoPkgHasElems_FeaturesListallResponseschema_FeaturesList_TFeaturesList_, bool) error
	XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_                                                          func(*XsdGoPkgHasElem_StatisticQueryDateDataReportResponseallResponseschema_StatisticQueryDateDataReportResponse_TStatisticQueryDateDataReportResponse_, bool) error
	TRestrictedValues                                                                                                                                                                                          func(*TRestrictedValues, bool) error
	TxsdFilesSequenceFile                                                                                                                                                                                      func(*TxsdFilesSequenceFile, bool) error
	XsdGoPkgHasElems_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_                                                                                                                             func(*XsdGoPkgHasElems_ReasonsToBuysequenceProductschema_ReasonsToBuy_TReasonsToBuy_, bool) error
	XsdGoPkgHasElem_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_                                                                                                                    func(*XsdGoPkgHasElem_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_, bool) error
	XsdGoPkgHasElems_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_                                                                                                             func(*XsdGoPkgHasElems_VirtualCategoriessequenceCategoryschema_VirtualCategories_TVirtualCategories_, bool) error
	TStatisticQueryDateDataReportResponse                                                                                                                                                                      func(*TStatisticQueryDateDataReportResponse, bool) error
	TSigns                                                                                                                                                                                                     func(*TSigns, bool) error
	XsdGoPkgHasElems_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_                                                                                       func(*XsdGoPkgHasElems_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_, bool) error
	TProductBulletGroup                                                                                                                                                                                        func(*TProductBulletGroup, bool) error
	XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_                                                                                                          func(*XsdGoPkgHasElems_VirtualCategorysequenceVirtualCategoriesschema_VirtualCategory_TVirtualCategory_, bool) error
	TFeatureLogoValue                                                                                                                                                                                          func(*TFeatureLogoValue, bool) error
	TDescribeProductsResponse                                                                                                                                                                                  func(*TDescribeProductsResponse, bool) error
	TStatisticQueryListResponse                                                                                                                                                                                func(*TStatisticQueryListResponse, bool) error
	XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_                                                                                        func(*XsdGoPkgHasElem_StatisticQueryListResponseallResponseschema_StatisticQueryListResponse_TStatisticQueryListResponse_, bool) error
	XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_                                                                                                                                                           func(*XsdGoPkgHasElems_SEOsequenceSEOsschema_Seo_Tseo_, bool) error
	XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_                                                                                                                   func(*XsdGoPkgHasElems_CustomerServicesequenceSupplierschema_CustomerService_TCustomerService_, bool) error
	XsdGoPkgHasElem_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_                                                                                                       func(*XsdGoPkgHasElem_ProductSeriesSloganssequenceSeriesschema_ProductSeriesSlogans_TProductSeriesSlogans_, bool) error
	XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_                                                                                                                 func(*XsdGoPkgHasElem_ResponsechoiceTxsdIcecatInterfaceICECATInterfaceschema_Response_TResponse_, bool) error
	TxsdIcecatInterface                                                                                                                                                                                        func(*TxsdIcecatInterface, bool) error
	XsdGoPkgHasElem_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_                                                                                                                                 func(*XsdGoPkgHasElem_FeatureLogosequenceProductschema_FeatureLogo_TFeatureLogo_, bool) error
	XsdGoPkgHasElems_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_                                                                                                                                func(*XsdGoPkgHasElems_DisclaimerssequenceProductschema_Disclaimers_TDisclaimers_, bool) error
	XsdGoPkgHasElem_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_                                       func(*XsdGoPkgHasElem_ProductComplaintReponsesequenceProductsComplaintResponseschema_ProductComplaintReponse_TxsdProductsComplaintResponseSequenceProductComplaintReponse_, bool) error
	TReasonsToBuy                                                                                                                                                                                              func(*TReasonsToBuy, bool) error
	XsdGoPkgHasElem_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_                                                                                                                             func(*XsdGoPkgHasElem_LocalValuesequenceProductFeatureschema_LocalValue_TLocalValue_, bool) error
	TFeaturesList                                                                                                                                                                                              func(*TFeaturesList, bool) error
	TLanguageList                                                                                                                                                                                              func(*TLanguageList, bool) error
	XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_                                                                                                                                                      func(*XsdGoPkgHasElem_SignallMeasureschema_Sign_XsdtString_, bool) error
	TSeries                                                                                                                                                                                                    func(*TSeries, bool) error
	XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_                                                                                                                              func(*XsdGoPkgHasElems_FilesequenceTxsdFilesfilesschema_File_TxsdFilesSequenceFile_, bool) error
	XsdGoPkgHasElem_Filesequencefilesschema_File_TxsdFilesSequenceFile_                                                                                                                                        func(*XsdGoPkgHasElem_Filesequencefilesschema_File_TxsdFilesSequenceFile_, bool) error
	XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_                                                                                                                                  func(*XsdGoPkgHasElem_MeasuresListallResponseschema_MeasuresList_TMeasuresList_, bool) error
	XsdGoPkgHasElem_CountriessequenceLanguageschema_Countries_TCountries_                                                                                                                                      func(*XsdGoPkgHasElem_CountriessequenceLanguageschema_Countries_TCountries_, bool) error
	XsdGoPkgHasElems_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_                                                                           func(*XsdGoPkgHasElems_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_, bool) error
	XsdGoPkgHasElem_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_                                         func(*XsdGoPkgHasElem_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_, bool) error
	XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_                                                                                                                                     func(*XsdGoPkgHasElems_ProductsequenceProductBundledschema_Product_TProduct_, bool) error
	XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_                                                                                                                               func(*XsdGoPkgHasElem_SuppliersListallResponseschema_SuppliersList_TSuppliersList_, bool) error
	TBody                                                                                                                                                                                                      func(*TBody, bool) error
	XsdGoPkgHasElem_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_                                                                                                                                func(*XsdGoPkgHasElem_DisclaimersequenceDisclaimersschema_Disclaimer_TDisclaimer_, bool) error
	XsdGoPkgHasElem_SeriessequenceProductFamilyschema_Series_TSeries_                                                                                                                                          func(*XsdGoPkgHasElem_SeriessequenceProductFamilyschema_Series_TSeries_, bool) error
	XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_                                                                                                                   func(*XsdGoPkgHasElem_FeatureGroupsListallResponseschema_FeatureGroupsList_TFeatureGroupsList_, bool) error
	TParentProductFamily                                                                                                                                                                                       func(*TParentProductFamily, bool) error
	TFeatureGroupsList                                                                                                                                                                                         func(*TFeatureGroupsList, bool) error
	TRestrictedValue                                                                                                                                                                                           func(*TRestrictedValue, bool) error
	TProductFamily                                                                                                                                                                                             func(*TProductFamily, bool) error
	XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_                                        func(*XsdGoPkgHasElems_DescribeProductResponsesequenceDescribeProductsResponseschema_DescribeProductResponse_TxsdDescribeProductsResponseSequenceDescribeProductResponse_, bool) error
	XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_                                                                            func(*XsdGoPkgHasElem_FulltextProductsSearchResponseallResponseschema_FulltextProductsSearchResponse_TFulltextProductsSearchResponse_, bool) error
	XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_                                                                                     func(*XsdGoPkgHasElem_FeatureValuesVocabularyListallResponseschema_FeatureValuesVocabularyList_TFeatureValuesVocabularyList_, bool) error
	XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_                                                                                                                    func(*XsdGoPkgHasElem_ProductchoiceTxsdIcecatInterfaceICECATInterfaceschema_Product_TProduct_, bool) error
	XsdGoPkgHasElem_IcecatInterface                                                                                                                                                                            func(*XsdGoPkgHasElem_IcecatInterface, bool) error
	TMeasure                                                                                                                                                                                                   func(*TMeasure, bool) error
	XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_                                                                                               func(*XsdGoPkgHasElems_ProductFamilySloganssequenceProductFamilyschema_ProductFamilySlogans_TProductFamilySlogans_, bool) error
	XsdGoPkgHasElems_SEOssequenceProductschema_SEOs_TSEOs_                                                                                                                                                     func(*XsdGoPkgHasElems_SEOssequenceProductschema_SEOs_TSEOs_, bool) error
	XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_                                                                                                                func(*XsdGoPkgHasElem_FeatureLogoValuesallFeatureLogoschema_FeatureLogoValues_TFeatureValuesList_, bool) error
	XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_                                                                                                    func(*XsdGoPkgHasElems_CategoryFeatureGroupsequenceCategoryschema_CategoryFeatureGroup_TCategoryFeatureGroup_, bool) error
	XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_                                                                                                                                                 func(*XsdGoPkgHasElems_NamessequenceCategoryschema_Names_TNames_, bool) error
	TProductsList                                                                                                                                                                                              func(*TProductsList, bool) error
	XsdGoPkgHasElem_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_                                                                                                                          func(*XsdGoPkgHasElem_ReasonToBuysequenceReasonsToBuyschema_ReasonToBuy_TProductBullet_, bool) error
	XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_                                                                                                                        func(*XsdGoPkgHasElem_ProductBulletssequenceProductschema_ProductBullets_TProductBullets_, bool) error
	Tseo                                                                                                                                                                                                       func(*Tseo, bool) error
}
